{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-level/finish-window/finish-window.component.ts","./src/app/game-level/finish-window/finish-window.component.html","./src/app/game-level/game-level.component.ts","./src/app/game-level/game-level.component.html","./src/app/game-level/game-loads/game-loads.component.ts","./src/app/game-level/game-loads/game-loads.component.html","./src/app/game-level/menu/menu.component.ts","./src/app/game-level/menu/menu.component.html","./src/app/game-level/scripts/draw.ts","./src/app/login-check.guard.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/material/material.module.ts","./src/app/services/game-save-load.service.ts","./src/app/services/login.service.ts","./src/configuration/apiUrl.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameLevelComponent } from './game-level/game-level.component';\r\nimport { LoginCheckGuard } from './login-check.guard';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'game',\r\n    component: GameLevelComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'game';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { GameLevelComponent } from './game-level/game-level.component';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { MenuComponent } from './game-level/menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { FinishWindowComponent } from './game-level/finish-window/finish-window.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GameLoadsComponent } from './game-level/game-loads/game-loads.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameLevelComponent,\n    LoginPageComponent,\n    MenuComponent,\n    FinishWindowComponent,\n    GameLoadsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    RouterModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-finish-window',\n  templateUrl: './finish-window.component.html',\n  styleUrls: ['./finish-window.component.scss'],\n})\nexport class FinishWindowComponent implements OnInit, OnDestroy {\n  @Input() levelFinishedEmitter: Observable<void>;\n  @Input() finishTime: string;\n  @Output() startNewLevel = new EventEmitter();\n  public isModalDisplayed = false;\n  private ngUnsubscribe$ = new Subject();\n  constructor() {}\n\n  ngOnInit() {\n    this.levelFinishedEmitter\n      .pipe(takeUntil(this.ngUnsubscribe$))\n      .subscribe(() => {\n        this.isModalDisplayed = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe$.next();\n    this.ngUnsubscribe$.complete();\n  }\n\n  public restartLevel() {\n    this.startNewLevel.emit();\n    this.isModalDisplayed = false;\n  }\n}\n","<div class=\"modal-background\" *ngIf=\"isModalDisplayed\">\n  <mat-card class=\"modal-itself\">\n    <h2 class=\"modal-text\">Your time is: {{ finishTime }} seconds!</h2>\n    <button class=\"modal-button\" mat-raised-button (click)=\"restartLevel()\">start new level</button>\n  </mat-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\nimport { LoginService } from '../services/login.service';\r\nimport {\r\n  startLevel,\r\n  startGameInterval,\r\n  clearGameInterval,\r\n  getLevelTime,\r\n  getIsLevelFinished,\r\n  playerStopMoving,\r\n  playerStopRotating,\r\n  playerMoveBack,\r\n  playerMoveForward,\r\n  playerRotateLeft,\r\n  playerRotateRight,\r\n} from './scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-game-level',\r\n  templateUrl: './game-level.component.html',\r\n  styleUrls: ['./game-level.component.scss'],\r\n})\r\nexport class GameLevelComponent implements OnInit, OnDestroy {\r\n  constructor(private loginService: LoginService) {}\r\n  public levelTime: string;\r\n  public levelFinishedEmitter = new Subject();\r\n  public isLevelFinished: boolean;\r\n  public isAuthorizedUser$;\r\n  public currentMenuId = -1;\r\n  private interval;\r\n  private ESCBtnPressHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27 && !this.isLevelFinished) {\r\n      this.openCloseMenu();\r\n    }\r\n  };\r\n  ngOnInit() {\r\n    this.startLevel();\r\n    this.initRestartKeyListener();\r\n    document.addEventListener('keydown', this.ESCBtnPressHandler);\r\n    this.isAuthorizedUser$ = this.loginService.isAuthorized().pipe(shareReplay(1));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener('keydown', this.ESCBtnPressHandler);\r\n  }\r\n\r\n  public openCloseMenu(menuId: number = null): void {\r\n    if (this.currentMenuId == -1) {\r\n      ++this.currentMenuId;\r\n    } else if (!menuId) {\r\n      --this.currentMenuId;\r\n    } else {\r\n      this.currentMenuId = menuId;\r\n    }\r\n    if (this.currentMenuId == -1 && menuId != -1) {\r\n      startGameInterval();\r\n    } else {\r\n      clearGameInterval();\r\n    }\r\n  }\r\n\r\n  public initRestartKeyListener(): void {\r\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      if (event.keyCode === 82 && !this.isLevelFinished) {\r\n        this.startLevel();\r\n      }\r\n    });\r\n  }\r\n\r\n  public startLevel({ preloadData, size } = { preloadData: null, size: null }): void {\r\n    this.isLevelFinished = false;\r\n    clearInterval(this.interval);\r\n    startLevel(preloadData, size);\r\n    this.interval = setInterval(() => {\r\n      this.levelTime = getLevelTime();\r\n      if (getIsLevelFinished()) {\r\n        clearInterval(this.interval);\r\n        this.finishLevel();\r\n        this.levelFinishedEmitter.next();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  public finishLevel(): void {\r\n    clearGameInterval();\r\n    this.isLevelFinished = true;\r\n  }\r\n\r\n  public moveForward() {\r\n    playerMoveForward();\r\n  }\r\n\r\n  public moveBackward() {\r\n    playerMoveBack();\r\n  }\r\n\r\n  public rotateLeft() {\r\n    playerRotateLeft();\r\n  }\r\n\r\n  public rotateRight() {\r\n    playerRotateRight();\r\n  }\r\n\r\n  public stopRotating() {\r\n    playerStopRotating();\r\n  }\r\n\r\n  public stopMoving() {\r\n    playerStopMoving();\r\n  }\r\n}\r\n","<canvas id=\"canvas\"></canvas>\r\n<canvas id=\"canvasPlayWindow\"></canvas>\r\n\r\n<div class=\"buttons-layer\">\r\n  <button\r\n    class=\"open-menu-button\"\r\n    color=\"primary\"\r\n    mat-fab\r\n    aria-label=\"Example icon button with a menu icon\"\r\n    (click)=\"openCloseMenu()\"\r\n  >\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <div class=\"move-buttons\">\r\n    <div class=\"button-pair-wrapper\">\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-top\"\r\n        (touchstart)=\"moveForward()\"\r\n        (touchend)=\"stopMoving()\"\r\n      ></button>\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-right\"\r\n        (touchstart)=\"rotateRight()\"\r\n        (touchend)=\"stopRotating()\"\r\n      ></button>\r\n    </div>\r\n    <div class=\"button-pair-wrapper\">\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-left\"\r\n        (touchstart)=\"rotateLeft()\"\r\n        (touchend)=\"stopRotating()\"\r\n      ></button>\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-bottom\"\r\n        (touchstart)=\"moveBackward()\"\r\n        (touchend)=\"stopMoving()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"timer\">{{ levelTime }}</div>\r\n\r\n<app-menu\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel($event)\"\r\n  *ngIf=\"currentMenuId == 0\"\r\n  [isAuthorizedUser]=\"isAuthorizedUser$ | async\"\r\n></app-menu>\r\n<app-game-loads\r\n  *ngIf=\"currentMenuId == 1\"\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel($event)\"\r\n>\r\n</app-game-loads>\r\n<app-finish-window\r\n  [levelFinishedEmitter]=\"levelFinishedEmitter.asObservable()\"\r\n  [finishTime]=\"levelTime\"\r\n  (startNewLevel)=\"startLevel()\"\r\n></app-finish-window>\r\n\r\n<div class=\"rotate-device\">\r\n  <span>ROTATE YOUR DEVICE! </span>\r\n  <mat-icon aria-hidden=\"false\" aria-label=\"Example refresh icon\">refresh</mat-icon>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-game-loads',\n  templateUrl: './game-loads.component.html',\n  styleUrls: ['./game-loads.component.scss'],\n})\nexport class GameLoadsComponent implements OnInit {\n  @Output() openCloseMenu = new EventEmitter();\n  @Output() startLevel = new EventEmitter();\n  public gameSaves$: Observable<any>;\n  constructor(\n    private loginService: LoginService,\n    private gameSaveLoadService: GameSaveLoadService\n  ) {}\n  dateFormat = 'MMM d, y, HH:mm:ss';\n  ngOnInit(): void {\n    this.gameSaves$ = this.gameSaveLoadService.getGameSaves(this.loginService.currentUserId);\n  }\n\n  public loadGame(saveId: string) {\n    this.gameSaveLoadService\n      .getGameData(saveId, this.loginService.currentUserId)\n      .pipe(take(1))\n      .subscribe((gameSave) => {\n        this.openCloseMenu.emit(-1);\n        this.startLevel.emit({ preloadData: gameSave });\n      });\n  }\n}\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <div class=\"inside-container\">\n      <ng-container *ngIf=\"gameSaves$ | async as gameSaves\">\n        <ng-container *ngIf=\"gameSaves.length; else nothingFound\">\n          <button\n            class=\"modal-button\"\n            mat-raised-button\n            *ngFor=\"let save of gameSaves\"\n            (click)=\"loadGame(save._id)\"\n          >\n            <span>{{ save.timestamp | date: dateFormat }} </span>\n            <span *ngIf=\"save.levelPreload.levelSize as lvlSize\" class=\"lvl-size\"\n              >{{ lvlSize }}x{{ lvlSize }}\n            </span>\n            <span>{{ save.levelTime / 1000 }}s </span>\n          </button>\n        </ng-container>\n        <ng-template #nothingFound>\n          <h2 class=\"modal-text\">No game saves to load</h2>\n        </ng-template>\n      </ng-container>\n    </div>\n  </mat-card>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { shareReplay, take } from 'rxjs/operators';\r\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { createGameSave, startLevel } from '../scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  @Input() isAuthorizedUser;\r\n  @Output() openCloseMenu = new EventEmitter();\r\n  @Output() startLevel = new EventEmitter();\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private gameSaveLoadService: GameSaveLoadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public logOut(): void {\r\n    this.loginService.logOut();\r\n  }\r\n\r\n  public loadGame() {\r\n    this.openCloseMenu.emit(1);\r\n  }\r\n\r\n  public startLevelNewLevel() {\r\n    this.openCloseMenu.emit(-1);\r\n    this.startLevel.emit({ size: 40 });\r\n  }\r\n\r\n  public saveGame() {\r\n    this.gameSaveLoadService\r\n      .saveGameData(createGameSave(), this.loginService.currentUserId)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this.openCloseMenu.emit(-1);\r\n      });\r\n  }\r\n}\r\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <button class=\"modal-button\" mat-raised-button (click)=\"openCloseMenu.emit()\">\n      Back to game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"startLevelNewLevel()\">\n      Start new level\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"loadGame()\" *ngIf=\"isAuthorizedUser\">\n      Load game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"saveGame()\" *ngIf=\"isAuthorizedUser\">\n      Save game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"logOut()\">Quit</button>\n  </mat-card>\n</div>\n","let canvas: HTMLCanvasElement;\r\nlet canvasPlayWindow: HTMLCanvasElement;\r\nlet body: HTMLBodyElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ctxPlay: CanvasRenderingContext2D;\r\n\r\nlet currentLevel: Level;\r\nlet currentPlayer: Player;\r\nconst defaultMoveVelocity = 10;\r\nconst defaultRotateVelocity = 1;\r\nconst textureDim = 64;\r\nconst defaultLevelSize = 40;\r\nconst rayCount = 128;\r\nconst FOV = 76;\r\nconst halfFOV = FOV / 2;\r\nconst mainColor: string = '#000';\r\nconst secondaryColor: string = '#666';\r\nconst thirdColor: string = '#5d7';\r\nconst playerColor: string = '#1d7';\r\nconst canvasWidth: number = 1178;\r\nconst canvasHeight: number = 512;\r\nconst playerEyesVerticalPosition = [-10, 15];\r\nconst playerEyesVerticalChange = [-0.5, 0.28];\r\nlet isLevelFinished = false;\r\n\r\nlet textures = new Image();\r\ntextures.src = './assets/images/walls.png';\r\n\r\nfunction normilizeAngle(angle: number) {\r\n  angle = angle % (2 * Math.PI);\r\n\r\n  if (angle < 0) {\r\n    angle += 2 * Math.PI;\r\n  }\r\n\r\n  return angle;\r\n}\r\n\r\nfunction calculateDistance(x1: number, y1: number, x2: number, y2: number) {\r\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n}\r\n\r\nfunction convertToRadians(angle: number) {\r\n  return angle * (Math.PI / 180);\r\n}\r\n\r\nexport function createGameSave() {\r\n  return {\r\n    playerPreload: currentPlayer.getPlayerData(),\r\n    levelPreload: currentLevel.getLevelData(),\r\n    levelTime: levelTimer.time,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\n// function rescaleCanvas(canvas: HTMLCanvasElement) {\r\n//     canvas.style.width = `${document.body.clientWidth}px`;\r\n//     canvas.style.height = `${document.body.clientHeight}px`;\r\n// }\r\n\r\nclass Ray {\r\n  ctx: CanvasRenderingContext2D;\r\n  level: Level;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  angleIncrement: number;\r\n  columnIndex: number;\r\n  xIntercept: any;\r\n  yIntercept: any;\r\n  isLookingDown: boolean = false;\r\n  isLookingLeft: boolean = false;\r\n  yStep: number = 0;\r\n  xStep: number = 0;\r\n  wallHitX: number;\r\n  wallHitY: number;\r\n  wallHitXHorizontal: number;\r\n  wallHitYHorizontal: number;\r\n  wallHitYVertical: number;\r\n  wallHitXVertical: number;\r\n  distanceToWall: number;\r\n  playerAngle: any;\r\n  texturePixel: number;\r\n  textureId: number;\r\n\r\n  constructor(\r\n    ctx: CanvasRenderingContext2D,\r\n    level: Level,\r\n    x: number,\r\n    y: number,\r\n    playerRotateAngle: number,\r\n    angleIncrement: number,\r\n    columnIndex: number\r\n  ) {\r\n    this.ctx = ctx;\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.angle = playerRotateAngle;\r\n    this.angleIncrement = angleIncrement;\r\n    this.columnIndex = columnIndex;\r\n    this.distanceToWall = 0;\r\n    this.wallHitX = 0;\r\n    this.wallHitY = 0;\r\n    this.wallHitXHorizontal = 0;\r\n    this.wallHitYHorizontal = 0;\r\n    this.wallHitXVertical = 0;\r\n    this.wallHitYVertical = 0;\r\n    this.texturePixel = 0;\r\n    this.textureId = 0;\r\n  }\r\n\r\n  public setAngleAndPosition(angle: number, x: number, y: number): void {\r\n    this.playerAngle = angle;\r\n    this.angle = normilizeAngle(angle + this.angleIncrement);\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public cast(): void {\r\n    this.xIntercept = 0;\r\n    this.yIntercept = 0;\r\n    this.xStep = 0;\r\n    this.yStep = 0;\r\n    this.isLookingDown = false;\r\n    this.isLookingLeft = false;\r\n    this.angle < Math.PI && (this.isLookingDown = true);\r\n    this.angle > Math.PI / 2 && this.angle < (3 * Math.PI) / 2 && (this.isLookingLeft = true);\r\n    let tan = Math.tan(this.angle);\r\n\r\n    let yTemp = this.y / this.level.tileSize;\r\n    this.yIntercept =\r\n      (this.isLookingDown ? Math.ceil(yTemp) : Math.floor(yTemp)) * this.level.tileSize; //tile y coord\r\n    this.xIntercept = this.x + (this.yIntercept - this.y) / tan; //neighbor tile\r\n\r\n    this.yStep = this.isLookingDown ? this.level.tileSize : -this.level.tileSize; //calculating Y step\r\n    this.xStep = this.yStep / tan; //calculating X step according to angle\r\n    let nextXHorizontal = this.xIntercept;\r\n    let nextYHorizontal = this.yIntercept;\r\n    !this.isLookingDown && --nextYHorizontal; //to count tile behind current wall\r\n\r\n    let isCollidingHorizontal = false;\r\n    while (\r\n      !isCollidingHorizontal &&\r\n      nextXHorizontal >= 0 &&\r\n      nextXHorizontal <= canvasWidth &&\r\n      nextYHorizontal >= 0 &&\r\n      nextYHorizontal <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXHorizontal / this.level.tileSize) ^ 0; //j for level array\r\n      let yCollision = (nextYHorizontal / this.level.tileSize) ^ 0; //i for level array\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingHorizontal = true;\r\n        this.wallHitXHorizontal = nextXHorizontal;\r\n        this.wallHitYHorizontal = nextYHorizontal;\r\n      } else {\r\n        nextXHorizontal += this.xStep;\r\n        nextYHorizontal += this.yStep;\r\n      }\r\n    }\r\n\r\n    let tempX = this.x / this.level.tileSize;\r\n    this.xIntercept =\r\n      (this.isLookingLeft ? Math.floor(tempX) : Math.ceil(tempX)) * this.level.tileSize; //tile x coord\r\n    this.yIntercept = this.y + (this.xIntercept - this.x) * tan;\r\n    this.xStep = this.isLookingLeft ? -this.level.tileSize : this.level.tileSize;\r\n    this.yStep = this.xStep * tan;\r\n    let nextXVertical = this.xIntercept;\r\n    let nextYVertical = this.yIntercept;\r\n    this.isLookingLeft && --nextXVertical;\r\n    let isCollidingVertical = false;\r\n    while (\r\n      !isCollidingVertical &&\r\n      nextXVertical >= 0 &&\r\n      nextXVertical <= canvasWidth &&\r\n      nextYVertical >= 0 &&\r\n      nextYVertical <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXVertical / this.level.tileSize) ^ 0;\r\n      let yCollision = (nextYVertical / this.level.tileSize) ^ 0;\r\n\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingVertical = true;\r\n        this.wallHitXVertical = nextXVertical;\r\n        this.wallHitYVertical = nextYVertical;\r\n      } else {\r\n        nextXVertical += this.xStep;\r\n        nextYVertical += this.yStep;\r\n      }\r\n    }\r\n\r\n    // find distance\r\n    let horizontalDist = Number.MAX_VALUE;\r\n    let verticalDist = Number.MAX_VALUE;\r\n\r\n    if (isCollidingHorizontal) {\r\n      horizontalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXHorizontal,\r\n        this.wallHitYHorizontal\r\n      );\r\n    }\r\n    if (isCollidingVertical) {\r\n      verticalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXVertical,\r\n        this.wallHitYVertical\r\n      );\r\n    }\r\n\r\n    if (horizontalDist < verticalDist) {\r\n      this.wallHitX = this.wallHitXHorizontal;\r\n      this.wallHitY = this.wallHitYHorizontal;\r\n      this.distanceToWall = horizontalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitX - ((this.wallHitX / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    } else {\r\n      this.wallHitX = this.wallHitXVertical;\r\n      this.wallHitY = this.wallHitYVertical;\r\n      this.distanceToWall = verticalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitY - ((this.wallHitY / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    }\r\n\r\n    this.level.clearMaskTile(this.wallHitX, this.wallHitY, this.isLookingDown, this.isLookingLeft);\r\n    this.texturePixel = this.texturePixel ^ 0;\r\n    this.textureId = this.level.getTile(this.wallHitX, this.wallHitY) - 1;\r\n    // this.textureId = horizontalDist < verticalDist ? 0 : 1;\r\n  }\r\n\r\n  public renderWall(ctx: CanvasRenderingContext2D, eyesLevel: number): void {\r\n    const defaultWallHeight = this.level.tileSize;\r\n    const defaultDistance = -(canvasHeight / 3) / Math.tan(halfFOV); //negative to become positive\r\n    this.distanceToWall = this.distanceToWall * Math.cos(this.angle - this.playerAngle); //fisheye fix\r\n    let wallHeight = (defaultWallHeight / this.distanceToWall) * defaultDistance;\r\n\r\n    let y0 = ((canvasHeight / 2) ^ 0) - ((wallHeight / 2) ^ 0);\r\n    let y1 = y0 + wallHeight;\r\n\r\n    let imageHeight = y0 - y1;\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    ctx.drawImage(\r\n      textures,\r\n      this.texturePixel,\r\n      this.textureId * textureDim,\r\n      1,\r\n      textureDim,\r\n      this.columnIndex * (canvasWidth / rayCount),\r\n      y1 + eyesLevel,\r\n      canvasWidth / rayCount,\r\n      imageHeight\r\n    );\r\n    // ctx.fillStyle = `#888`;\r\n    // if(this.textureId) {\r\n    //     ctx.fillStyle = `#aaa`;\r\n    // }\r\n    // ctx.fillRect(\r\n    //     this.columnIndex * (canvasWidth/rayCount),\r\n    //     y1 + eyesLevel,\r\n    //     canvasWidth/rayCount,\r\n    //     imageHeight\r\n    // )\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.x, this.y);\r\n    this.ctx.lineTo(this.wallHitX, this.wallHitY);\r\n    this.ctx.strokeStyle = '#f33';\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n  }\r\n}\r\n\r\nclass Player {\r\n  ctx: CanvasRenderingContext2D;\r\n  currentLevel: Level;\r\n  x: number;\r\n  y: number;\r\n  moveState: number;\r\n  rotateState: number;\r\n  rotateAngle: number;\r\n  moveVelocity: number;\r\n  rotateVelocity: number;\r\n  rays: Ray[] = [];\r\n  rayCount: number;\r\n  eyesLevel: number;\r\n  doesEyesLevelChangingUp: boolean;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, currentLevel: Level, playerPreload: any) {\r\n    this.ctx = ctx;\r\n    this.currentLevel = currentLevel;\r\n    // random start\r\n    // this.x = currentLevel.startingPoint.j * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    // this.y = currentLevel.startingPoint.i * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    if (playerPreload) {\r\n      this.x = playerPreload.playerCoords.x;\r\n      this.y = playerPreload.playerCoords.y;\r\n      this.rotateAngle = playerPreload.playerRotateAngle;\r\n    } else {\r\n      this.x = currentLevel.tileSize * 1.5;\r\n      this.y = currentLevel.tileSize * 1.5;\r\n      this.rotateAngle = 0;\r\n    }\r\n\r\n    this.moveState = 0;\r\n    this.rotateState = 0;\r\n    this.eyesLevel = 0;\r\n    this.doesEyesLevelChangingUp = true;\r\n    this.moveVelocity = (this.currentLevel.tileSize / canvasHeight) * defaultMoveVelocity;\r\n    this.rotateVelocity = (defaultRotateVelocity * Math.PI) / 180;\r\n    this.rayCount = rayCount;\r\n\r\n    let angleIncrementForRays = convertToRadians(FOV / this.rayCount);\r\n    let raysStartAngle = convertToRadians(this.rotateAngle - halfFOV);\r\n\r\n    for (let i = 0; i < this.rayCount; ++i, raysStartAngle += angleIncrementForRays) {\r\n      this.rays[i] = new Ray(\r\n        this.ctx,\r\n        this.currentLevel,\r\n        this.x,\r\n        this.y,\r\n        this.rotateAngle,\r\n        raysStartAngle,\r\n        i\r\n      );\r\n    }\r\n  }\r\n\r\n  public isOnFinish(): boolean {\r\n    return (\r\n      ((this.x / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.j &&\r\n      ((this.y / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.i\r\n    );\r\n  }\r\n\r\n  public getPlayerData(): {\r\n    playerCoords: {\r\n      x: number;\r\n      y: number;\r\n    };\r\n    playerRotateAngle: number;\r\n  } {\r\n    return {\r\n      playerCoords: {\r\n        x: this.x,\r\n        y: this.y,\r\n      },\r\n      playerRotateAngle: this.rotateAngle,\r\n    };\r\n  }\r\n\r\n  public tick(): void {\r\n    this.updatePosition();\r\n    this.castRays();\r\n    this.renderRays();\r\n    this.draw();\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.fillStyle = playerColor;\r\n    this.ctx.fillRect(this.x - 3, this.y - 3, 6, 6);\r\n  }\r\n\r\n  public castRays(): void {\r\n    this.rays.forEach((ray) => ray.cast());\r\n    this.rays.forEach((ray) => ray.draw());\r\n  }\r\n\r\n  public renderRays(): void {\r\n    this.rays.forEach((ray) => ray.renderWall(ctxPlay, this.eyesLevel));\r\n  }\r\n\r\n  public forward(): void {\r\n    this.moveState = 1;\r\n  }\r\n\r\n  public back(): void {\r\n    this.moveState = -1;\r\n  }\r\n\r\n  public left(): void {\r\n    this.rotateState = -1;\r\n  }\r\n\r\n  public right(): void {\r\n    this.rotateState = 1;\r\n  }\r\n\r\n  public moveStateZero(): void {\r\n    this.moveState = 0;\r\n  }\r\n\r\n  public rotateStateZero(): void {\r\n    this.rotateState = 0;\r\n  }\r\n\r\n  public updatePosition(): void {\r\n    isLevelFinished = this.isOnFinish();\r\n    let newX = this.x + this.moveState * Math.cos(this.rotateAngle) * this.moveVelocity;\r\n    let newY = this.y + this.moveState * Math.sin(this.rotateAngle) * this.moveVelocity;\r\n\r\n    if (this.moveState) {\r\n      if (\r\n        this.eyesLevel > -playerEyesVerticalPosition[0] ||\r\n        this.eyesLevel < -playerEyesVerticalPosition[1]\r\n      ) {\r\n        if (this.doesEyesLevelChangingUp) {\r\n          this.eyesLevel = -playerEyesVerticalPosition[1];\r\n        } else {\r\n          this.eyesLevel = -playerEyesVerticalPosition[0];\r\n        }\r\n        this.doesEyesLevelChangingUp = !this.doesEyesLevelChangingUp;\r\n      }\r\n      if (this.doesEyesLevelChangingUp) {\r\n        this.eyesLevel += playerEyesVerticalChange[0];\r\n      } else {\r\n        this.eyesLevel += playerEyesVerticalChange[1];\r\n      }\r\n    }\r\n\r\n    !this.isCollision(newX, newY) && ((this.x = newX), (this.y = newY));\r\n\r\n    this.rotateAngle += this.rotateState * this.rotateVelocity;\r\n    this.rotateAngle = normilizeAngle(this.rotateAngle);\r\n\r\n    this.rays.forEach((ray) => ray.setAngleAndPosition(this.rotateAngle, this.x, this.y));\r\n  }\r\n\r\n  public isCollision(x: number, y: number): boolean {\r\n    let playerX = (x / this.currentLevel.tileSize) ^ 0;\r\n    let playerY = (y / this.currentLevel.tileSize) ^ 0;\r\n    return this.currentLevel.isCollision(playerX, playerY);\r\n  }\r\n}\r\n\r\nclass Level {\r\n  ctx: CanvasRenderingContext2D;\r\n  levelArray: any;\r\n  tilesCount: any;\r\n  canvasWidth: any;\r\n  canvasHeight: any;\r\n  tileSize: number;\r\n  startingPoint: { i: number; j: number };\r\n  finishPoint: { i: number; j: number };\r\n  mask: number[][];\r\n  constructor(ctx: CanvasRenderingContext2D, levelSize: number, levelPreload: any) {\r\n    this.ctx = ctx;\r\n    this.startingPoint = {\r\n      i: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n      j: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n    };\r\n\r\n    if (levelPreload) {\r\n      [this.levelArray, this.mask] = levelPreload.levelData;\r\n      this.finishPoint = levelPreload.finishPoint;\r\n      this.tilesCount = this.levelArray[0].length;\r\n    } else {\r\n      [this.levelArray, this.mask] = this.generateLevel(levelSize);\r\n      this.finishPoint = {\r\n        i: levelSize - 2,\r\n        j: levelSize - 2,\r\n      };\r\n      this.tilesCount = levelSize;\r\n    }\r\n\r\n    this.canvasWidth = canvas.width;\r\n    this.canvasHeight = canvas.height;\r\n    this.tileSize = this.tileSize = (this.canvasWidth / this.tilesCount) ^ 0;\r\n  }\r\n\r\n  public getLevelData(): {\r\n    levelData: [number[][], number[][]];\r\n    finishPoint: { i: number; j: number };\r\n    levelSize: number;\r\n  } {\r\n    return {\r\n      levelData: [this.levelArray, this.mask],\r\n      finishPoint: this.finishPoint,\r\n      levelSize: this.tilesCount,\r\n    };\r\n  }\r\n\r\n  public getTile(x: number, y: number): number {\r\n    return this.levelArray[(y / this.tileSize) ^ 0][(x / this.tileSize) ^ 0];\r\n  }\r\n\r\n  public generateLevel(size: number): [number[][], number[][]] {\r\n    let lvlMap: number[][] = Array(size);\r\n    let mask: number[][];\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      lvlMap[i] = Array(size).fill(1);\r\n    }\r\n    mask = lvlMap.map((row) => row.slice()); //.fill(0)\r\n    let lvlStack: { i: number; j: number }[] = [];\r\n\r\n    lvlStack.push({ i: 1, j: 1 });\r\n    let i = this.startingPoint.i,\r\n      j = this.startingPoint.j;\r\n    lvlMap[i][j] = 0;\r\n    while (1) {\r\n      // console.log('Searching neighbours of: ',i,j);\r\n      if (this.isAvailableAnyNeighbour(lvlMap, i, j)) {\r\n        lvlStack.push({ i, j });\r\n        let newI = i,\r\n          newJ = j;\r\n        while (1) {\r\n          newI = i;\r\n          newJ = j;\r\n          switch (Math.round(Math.random() * 4)) {\r\n            case 0:\r\n              newI = i - 1;\r\n              break;\r\n            case 1:\r\n              newJ = j - 1;\r\n              break;\r\n            case 2:\r\n              newI = i + 1;\r\n              break;\r\n            case 3:\r\n              newJ = j + 1;\r\n              break;\r\n          }\r\n          if (\r\n            newI > 0 &&\r\n            newI < size - 1 &&\r\n            newJ > 0 &&\r\n            newJ < size - 1 &&\r\n            lvlMap[newI][newJ] &&\r\n            lvlMap[newI][newJ] != 0 &&\r\n            !this.doesAnyRadiusNeighbourIsPartOfPath({ i, j }, lvlMap, newI, newJ)\r\n          )\r\n            break;\r\n        }\r\n        i = newI;\r\n        j = newJ;\r\n        lvlMap[i][j] = 0;\r\n      } else if (!lvlStack.length) {\r\n        break;\r\n      } else {\r\n        let previous = lvlStack.pop();\r\n        if (previous) {\r\n          i = previous.i;\r\n          j = previous.j;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.clearMapBlock(lvlMap, 2, 1, 1);\r\n    this.clearMapBlock(lvlMap, 2, size - 3, size - 3);\r\n    return [lvlMap, mask];\r\n  }\r\n\r\n  public clearMapBlock(lvlArray: number[][], size: number, i: number, j: number): void {\r\n    for (let x = i, xN = size; xN > 0; --xN, ++x) {\r\n      for (let y = j, yN = size; yN > 0; --yN, ++y) {\r\n        lvlArray[x][y] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  private isAvailableAnyNeighbour(lvlMap: number[][], i: number, j: number): boolean {\r\n    let isHavingSpareNeighbour = false;\r\n    let neighbourI = i,\r\n      neighbourJ = j;\r\n    for (let index = 0; index < 4; ++index) {\r\n      switch (index) {\r\n        case 0:\r\n          neighbourI = i - 1;\r\n          break;\r\n        case 1:\r\n          neighbourJ = j - 1;\r\n          break;\r\n        case 2:\r\n          neighbourI = i + 1;\r\n          break;\r\n        case 3:\r\n          neighbourJ = j + 1;\r\n          break;\r\n      }\r\n\r\n      if (\r\n        neighbourI > 0 &&\r\n        neighbourI < lvlMap.length - 1 &&\r\n        neighbourJ > 0 &&\r\n        neighbourJ < lvlMap.length - 1 &&\r\n        lvlMap[neighbourI][neighbourJ]\r\n      ) {\r\n        isHavingSpareNeighbour = true;\r\n        if (isHavingSpareNeighbour) {\r\n          isHavingSpareNeighbour = !this.doesAnyRadiusNeighbourIsPartOfPath(\r\n            { i, j },\r\n            lvlMap,\r\n            neighbourI,\r\n            neighbourJ\r\n          );\r\n        }\r\n        if (isHavingSpareNeighbour) break;\r\n      }\r\n\r\n      neighbourI = i;\r\n      neighbourJ = j;\r\n    }\r\n\r\n    return isHavingSpareNeighbour;\r\n  }\r\n\r\n  private doesAnyRadiusNeighbourIsPartOfPath(\r\n    exception: { i: number; j: number },\r\n    lvlMap: number[][],\r\n    neighbourI: number,\r\n    neighbourJ: number\r\n  ) {\r\n    // console.log('Subneighbour: ', neighbourI,neighbourJ);\r\n\r\n    let changes = { i: exception.i - neighbourI, j: exception.j - neighbourJ };\r\n    let anyNeighbourIsPath = false;\r\n    let startI = neighbourI,\r\n      endI = neighbourI,\r\n      startJ = neighbourJ,\r\n      endJ = neighbourJ;\r\n\r\n    if (changes.i > 0) {\r\n      startI -= 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.i < 0) {\r\n      endI += 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.j > 0) {\r\n      startJ -= 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    if (changes.j < 0) {\r\n      endJ += 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    // console.log(`ranges: [i : ${startI}, ${endI} j : ${startJ}, ${endJ}]`);\r\n\r\n    for (let i = startI; i <= endI; ++i) {\r\n      for (let j = startJ; j <= endJ; ++j) {\r\n        // console.log('Checking: ',i,j);\r\n        if (i > 0 && i < lvlMap.length - 1 && j > 0 && j < lvlMap.length - 1 && !lvlMap[i][j]) {\r\n          anyNeighbourIsPath = true;\r\n          // console.log(i, j, ' is 0');\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return anyNeighbourIsPath;\r\n  }\r\n\r\n  public clearMaskTile(hitX: number, hitY: number, down: boolean, left: boolean): void {\r\n    hitY += down ? 1 : -1;\r\n    hitX += left ? -1 : 1;\r\n    const jTileHit = (hitX / this.tileSize) ^ 0,\r\n      iTileHit = (hitY / this.tileSize) ^ 0;\r\n    this.mask[iTileHit][jTileHit] = 0;\r\n  }\r\n\r\n  public draw(ignoreMask: boolean = false) {\r\n    for (let i = 0; i < this.tilesCount; ++i) {\r\n      for (let j = 0; j < this.tilesCount; ++j) {\r\n        this.ctx.fillStyle =\r\n          this.levelArray[i][j] && (!this.mask[i][j] || ignoreMask) ? mainColor : secondaryColor;\r\n        this.ctx.fillRect(j * this.tileSize, i * this.tileSize, this.tileSize, this.tileSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  public drawFinishPoint() {\r\n    this.ctx.fillStyle = thirdColor;\r\n    this.ctx.fillRect(\r\n      this.finishPoint.j * this.tileSize,\r\n      this.finishPoint.i * this.tileSize,\r\n      this.tileSize,\r\n      this.tileSize\r\n    );\r\n  }\r\n\r\n  public isCollision(x: number, y: number) {\r\n    if (y >= this.levelArray.length) {\r\n      y = this.levelArray.length - 1;\r\n    }\r\n    return !!this.levelArray[y][x];\r\n  }\r\n}\r\n\r\nfunction paintFloorAndCeiling(ctx: CanvasRenderingContext2D) {\r\n  ctx.fillStyle = '#566';\r\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight / 2);\r\n\r\n  ctx.fillStyle = '#442300';\r\n  ctx.fillRect(0, canvasHeight / 2, canvasWidth, canvasHeight);\r\n}\r\n\r\nlet gameInterval: any;\r\nlet isGameRunning = false;\r\nlet timeInterval: any;\r\nlet audioObj: any = null;\r\n\r\nfunction animationFrameRepeat() {\r\n  draw();\r\n  gameInterval = requestAnimationFrame(animationFrameRepeat);\r\n}\r\n\r\nexport function startGameInterval() {\r\n  gameInterval = animationFrameRepeat();\r\n  isGameRunning = true;\r\n}\r\n\r\nexport function clearGameInterval() {\r\n  cancelAnimationFrame(gameInterval);\r\n  isGameRunning = false;\r\n}\r\n\r\nconst levelTimer = {\r\n  time: 0,\r\n};\r\n\r\nexport function getLevelTime(): string {\r\n  return (levelTimer.time / 1000).toFixed(1);\r\n}\r\n\r\nexport function getIsLevelFinished(): boolean {\r\n  return isLevelFinished;\r\n}\r\n\r\nfunction clearTimerInterval() {\r\n  clearInterval(timeInterval);\r\n  levelTimer.time = 0;\r\n}\r\n\r\nfunction startTimerInterval() {\r\n  timeInterval = setInterval(() => {\r\n    if (isGameRunning) {\r\n      levelTimer.time += 100;\r\n    }\r\n  }, 100);\r\n}\r\n\r\nexport function startLevel(loadGame: any = null, levelSize: number = null) {\r\n  isLevelFinished = false;\r\n  // audioObj?.pause();\r\n  // audioObj = null;\r\n  // audioObj = new Audio('./assets/audio/amogus.mp4');\r\n  // audioObj.addEventListener(\"canplaythrough\", () => {\r\n  //     audioObj.play();\r\n  // });\r\n\r\n  clearGameInterval();\r\n  clearTimerInterval();\r\n  startTimerInterval();\r\n\r\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n  canvasPlayWindow = document.getElementById('canvasPlayWindow') as HTMLCanvasElement;\r\n  ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  ctxPlay = canvasPlayWindow.getContext('2d') as CanvasRenderingContext2D;\r\n  // body = document.querySelector('body') as HTMLBodyElement;\r\n  // if (body) {\r\n  //   body.style.backgroundColor = secondaryColor;\r\n  // }\r\n  canvas.width = canvasHeight;\r\n  canvas.height = canvasHeight;\r\n\r\n  canvasPlayWindow.width = canvasWidth;\r\n  canvasPlayWindow.height = canvasHeight;\r\n  // rescaleCanvas(canvasPlayWindow);\r\n  loadGame && (levelTimer.time = loadGame.levelTime);\r\n  currentLevel = new Level(ctx, levelSize || defaultLevelSize, loadGame?.levelPreload);\r\n  currentPlayer = new Player(ctx, currentLevel, loadGame?.playerPreload);\r\n\r\n  startGameInterval();\r\n}\r\n\r\nfunction clearCanvas() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctxPlay.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nfunction draw() {\r\n  clearCanvas();\r\n  paintFloorAndCeiling(ctxPlay);\r\n  currentLevel.draw();\r\n  currentPlayer.tick();\r\n  // currentPlayer.updatePosition();\r\n  // currentPlayer.castRays();\r\n  // currentPlayer.renderRays();\r\n  // currentPlayer.draw();\r\n\r\n  currentLevel.drawFinishPoint();\r\n}\r\n\r\n// document.addEventListener('DOMContentLoaded', startLevel);\r\n\r\nexport function playerMoveForward() {\r\n  currentPlayer.forward();\r\n}\r\n\r\nexport function playerMoveBack() {\r\n  currentPlayer.back();\r\n}\r\n\r\nexport function playerStopMoving() {\r\n  currentPlayer.moveStateZero();\r\n}\r\n\r\nexport function playerRotateLeft() {\r\n  currentPlayer.left();\r\n}\r\n\r\nexport function playerRotateRight() {\r\n  currentPlayer.right();\r\n}\r\n\r\nexport function playerStopRotating() {\r\n  currentPlayer.rotateStateZero();\r\n}\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.left();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.right();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.forward();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.back();\r\n\r\n      break;\r\n    }\r\n    // case 82: {\r\n    //     startLevel();\r\n\r\n    //     break;\r\n    // }\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keyup', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n  }\r\n});\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './services/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginCheckGuard implements CanActivate {\n  constructor(private router: Router, private loginService: LoginService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isInLoginPage = state.url.includes('login') || state.url.includes('register');\n    if (this.loginService.isLoggedIn()) {\n      if (isInLoginPage) {\n        this.router.navigateByUrl('/game');\n      }\n      return true;\n    } else {\n      if (isInLoginPage) {\n        return true;\n      } else {\n        this.router.navigateByUrl('/login');\n        return false;\n      }\n    }\n  }\n}\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take } from 'rxjs/operators';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public loginForm = this.fb.group({\n    login: [null, Validators.required],\n    password: [null, [Validators.required, Validators.minLength(8)]],\n    passwordRepeat: [null, Validators.required],\n  });\n  public isOnLoginPage = new BehaviorSubject(null);\n\n  constructor(\n    private loginService: LoginService,\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isOnLoginPage.next(this.router.url.includes('login'));\n    const passwordRepeatField = this.loginForm.get('passwordRepeat');\n    this.activatedRoute.url.subscribe(() => {\n      this.isOnLoginPage.next(this.router.url.includes('login'));\n      const validators = [];\n      !this.isOnLoginPage.value && validators.push(Validators.required);\n      passwordRepeatField.setValidators(validators);\n    });\n    passwordRepeatField.valueChanges.subscribe((value) => {\n      if (value !== this.loginForm.get('password').value) {\n        passwordRepeatField.setErrors({\n          match: \"passwords doesn't match\",\n        });\n      } else {\n        passwordRepeatField.setErrors(null);\n      }\n    });\n  }\n\n  public logInAsGuest(): void {\n    this.loginService.logInAsGuest();\n  }\n\n  public logInAsUser(): void {\n    this.loginService\n      .logIn(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n\n  public register(): void {\n    this.loginService\n      .register(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n}\n","<div class=\"modal-background\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"logInAsGuest()\" class=\"as-guest\">\r\n    Play as guest\r\n  </button>\r\n  <mat-card class=\"modal-itself\">\r\n    <form [formGroup]=\"loginForm\" class=\"form\">\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Login</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"login\" placeholder=\"Login\" required />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('password').errors\"\r\n          >Min length of password is 8 symbols</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\" *ngIf=\"!(isOnLoginPage | async)\">\r\n        <mat-label>Repeat password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"passwordRepeat\"\r\n          placeholder=\"Repeat password\"\r\n          [required]=\"!(isOnLoginPage | async)\"\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('passwordRepeat').errors\">{{\r\n          loginForm.get('passwordRepeat').errors['match']\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n    <div class=\"login-buttons\">\r\n      <a routerLink=\"/register\" *ngIf=\"isOnLoginPage | async; else alreadyRegistered\"\r\n        >don't have account yet?</a\r\n      >\r\n      <ng-template #alreadyRegistered>\r\n        <a routerLink=\"/login\">already registered?</a>\r\n      </ng-template>\r\n\r\n      <button\r\n        class=\"modal-button sign-in-btn\"\r\n        mat-raised-button\r\n        (click)=\"logInAsUser()\"\r\n        [disabled]=\"!loginForm.valid\"\r\n        *ngIf=\"isOnLoginPage | async; else regButton\"\r\n      >\r\n        Sign in\r\n      </button>\r\n      <ng-template #regButton>\r\n        <button\r\n          class=\"modal-button sign-in-btn\"\r\n          mat-raised-button\r\n          (click)=\"register()\"\r\n          [disabled]=\"!loginForm.valid\"\r\n        >\r\n          Register\r\n        </button>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n@NgModule({\n  declarations: [],\n  exports: [MatButtonModule, MatIconModule, MatCardModule, MatFormFieldModule, MatInputModule],\n})\nexport class MaterialModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameSaveLoadService {\n  constructor(private router: Router, private http: HttpClient) {}\n\n  public saveGameData(payload: any, userId: string): Observable<any> {\n    return this.http.post<any>(`${URL}/save-game/${userId}`, payload);\n  }\n\n  public getGameData(saveId: string, userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/load-game/${saveId}/${userId}`);\n  }\n\n  public getGameSaves(userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/game-saves/${userId}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from, Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private router: Router, private http: HttpClient) {}\n  public isLoggedIn(): boolean {\n    return !!localStorage.getItem('userId');\n  }\n\n  public logInAsGuest(): void {\n    this.setUserIdToLocalStorage('guest');\n    this.router.navigateByUrl('/game');\n  }\n\n  public setUserIdToLocalStorage(userId: string): void {\n    localStorage.setItem('userId', userId);\n  }\n\n  public logIn({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/login`, { login, password });\n  }\n\n  public register({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/register`, { login, password });\n  }\n\n  public isAuthorized(): Observable<any> {\n    return this.http.get<any>(`${URL}/user-exists/${localStorage.getItem('userId')}`);\n  }\n\n  public logOut(): void {\n    localStorage.removeItem('userId');\n    this.router.navigateByUrl('/login');\n  }\n\n  public get currentUserId(): string {\n    return localStorage.getItem('userId');\n  }\n}\n","export const URL = 'https://raycast.herokuapp.com/api';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}