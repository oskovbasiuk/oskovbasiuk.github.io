{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game-level/finish-window/finish-window.component.ts","webpack:///src/app/game-level/finish-window/finish-window.component.html","webpack:///src/app/game-level/game-level.component.ts","webpack:///src/app/game-level/game-level.component.html","webpack:///src/app/game-level/game-loads/game-loads.component.ts","webpack:///src/app/game-level/game-loads/game-loads.component.html","webpack:///src/app/game-level/menu/menu.component.ts","webpack:///src/app/game-level/menu/menu.component.html","webpack:///src/app/game-level/scripts/draw.ts","webpack:///src/app/login-check.guard.ts","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/services/game-save-load.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/configuration/apiUrl.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FinishWindowComponent","startNewLevel","isModalDisplayed","ngUnsubscribe$","levelFinishedEmitter","pipe","subscribe","next","complete","emit","GameLevelComponent","loginService","currentMenuId","ESCBtnPressHandler","event","keyCode","isLevelFinished","openCloseMenu","startLevel","initRestartKeyListener","document","addEventListener","isAuthorizedUser$","isAuthorized","initializeMobileButtonsSubscribtion","removeEventListener","removeMobileButtonsSubscriptions","menuId","preloadData","size","clearInterval","interval","setInterval","levelTime","finishLevel","btnTop","getElementById","btnRight","btnLeft","btnBottom","GameLoadsComponent","gameSaveLoadService","dateFormat","gameSaves$","getGameSaves","currentUserId","saveId","getGameData","gameSave","MenuComponent","logOut","saveGameData","startLevelNewLevel","canvas","canvasPlayWindow","body","ctx","ctxPlay","currentLevel","currentPlayer","defaultMoveVelocity","defaultRotateVelocity","textureDim","defaultLevelSize","rayCount","FPS","FOV","halfFOV","mainColor","secondaryColor","thirdColor","playerColor","canvasWidth","canvasHeight","playerEyesVerticalPosition","playerEyesVerticalChange","textures","Image","src","normilizeAngle","angle","Math","PI","calculateDistance","x1","y1","x2","y2","sqrt","convertToRadians","createGameSave","playerPreload","getPlayerData","levelPreload","getLevelData","levelTimer","time","timestamp","Date","Ray","level","x","y","playerRotateAngle","angleIncrement","columnIndex","isLookingDown","isLookingLeft","yStep","xStep","distanceToWall","wallHitX","wallHitY","wallHitXHorizontal","wallHitYHorizontal","wallHitXVertical","wallHitYVertical","texturePixel","textureId","playerAngle","xIntercept","yIntercept","tan","yTemp","tileSize","ceil","floor","nextXHorizontal","nextYHorizontal","isCollidingHorizontal","xCollision","yCollision","isCollision","tempX","nextXVertical","nextYVertical","isCollidingVertical","horizontalDist","Number","MAX_VALUE","verticalDist","clearMaskTile","getTile","eyesLevel","defaultWallHeight","defaultDistance","cos","wallHeight","y0","imageHeight","imageSmoothingEnabled","drawImage","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","Player","rays","playerCoords","rotateAngle","moveState","rotateState","doesEyesLevelChangingUp","moveVelocity","tilesCount","rotateVelocity","angleIncrementForRays","raysStartAngle","i","finishPoint","j","updatePosition","castRays","renderRays","draw","fillStyle","fillRect","forEach","ray","cast","renderWall","isOnFinish","newX","newY","sin","setAngleAndPosition","playerX","playerY","Level","levelSize","startingPoint","round","random","levelData","levelArray","mask","length","generateLevel","width","height","lvlMap","Array","fill","map","row","slice","lvlStack","push","isAvailableAnyNeighbour","newI","newJ","doesAnyRadiusNeighbourIsPartOfPath","previous","pop","clearMapBlock","lvlArray","xN","yN","isHavingSpareNeighbour","neighbourI","neighbourJ","index","exception","changes","anyNeighbourIsPath","startI","endI","startJ","endJ","hitX","hitY","down","left","jTileHit","iTileHit","ignoreMask","paintFloorAndCeiling","gameinterval","isGameRunning","timeInterval","audioObj","startGameInterval","clearGameInterval","getLevelTime","toFixed","getIsLevelFinished","clearTimerInterval","startTimerInterval","loadGame","getContext","clearCanvas","clearRect","tick","drawFinishPoint","playerMoveForward","forward","playerMoveBack","back","playerStopMoving","moveStateZero","playerRotateLeft","playerRotateRight","right","playerStopRotating","rotateStateZero","LoginCheckGuard","router","state","isInLoginPage","url","includes","isLoggedIn","navigateByUrl","providedIn","LoginPageComponent","fb","activatedRoute","loginForm","group","login","required","password","minLength","passwordRepeat","isOnLoginPage","passwordRepeatField","get","validators","value","setValidators","valueChanges","setErrors","match","logInAsGuest","logIn","error","response","alert","setUserIdToLocalStorage","userId","register","MaterialModule","GameSaveLoadService","http","payload","post","LoginService","localStorage","getItem","setItem","removeItem","URL","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameLevelComponent } from './game-level/game-level.component';\r\nimport { LoginCheckGuard } from './login-check.guard';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'game',\r\n    component: GameLevelComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'game';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { GameLevelComponent } from './game-level/game-level.component';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { MenuComponent } from './game-level/menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { FinishWindowComponent } from './game-level/finish-window/finish-window.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GameLoadsComponent } from './game-level/game-loads/game-loads.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameLevelComponent,\n    LoginPageComponent,\n    MenuComponent,\n    FinishWindowComponent,\n    GameLoadsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    RouterModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-finish-window',\n  templateUrl: './finish-window.component.html',\n  styleUrls: ['./finish-window.component.scss'],\n})\nexport class FinishWindowComponent implements OnInit, OnDestroy {\n  @Input() levelFinishedEmitter: Observable<void>;\n  @Input() finishTime: string;\n  @Output() startNewLevel = new EventEmitter();\n  public isModalDisplayed = false;\n  private ngUnsubscribe$ = new Subject();\n  constructor() {}\n\n  ngOnInit() {\n    this.levelFinishedEmitter\n      .pipe(takeUntil(this.ngUnsubscribe$))\n      .subscribe(() => {\n        this.isModalDisplayed = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe$.next();\n    this.ngUnsubscribe$.complete();\n  }\n\n  public restartLevel() {\n    this.startNewLevel.emit();\n    this.isModalDisplayed = false;\n  }\n}\n","<div class=\"modal-background\" *ngIf=\"isModalDisplayed\">\n  <mat-card class=\"modal-itself\">\n    <h2 class=\"modal-text\">Your time is: {{ finishTime }} seconds!</h2>\n    <button class=\"modal-button\" mat-raised-button (click)=\"restartLevel()\">start new level</button>\n  </mat-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\nimport { LoginService } from '../services/login.service';\r\nimport {\r\n  startLevel,\r\n  startGameInterval,\r\n  clearGameInterval,\r\n  getLevelTime,\r\n  getIsLevelFinished,\r\n  playerStopMoving,\r\n  playerStopRotating,\r\n  playerMoveBack,\r\n  playerMoveForward,\r\n  playerRotateLeft,\r\n  playerRotateRight,\r\n} from './scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-game-level',\r\n  templateUrl: './game-level.component.html',\r\n  styleUrls: ['./game-level.component.scss'],\r\n})\r\nexport class GameLevelComponent implements OnInit, OnDestroy {\r\n  constructor(private loginService: LoginService) {}\r\n  public levelTime: string;\r\n  public levelFinishedEmitter = new Subject();\r\n  public isLevelFinished: boolean;\r\n  public isAuthorizedUser$;\r\n  public currentMenuId = -1;\r\n  private interval;\r\n  private ESCBtnPressHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27 && !this.isLevelFinished) {\r\n      this.openCloseMenu();\r\n    }\r\n  };\r\n  ngOnInit() {\r\n    this.startLevel();\r\n    this.initRestartKeyListener();\r\n    document.addEventListener('keydown', this.ESCBtnPressHandler);\r\n    this.isAuthorizedUser$ = this.loginService.isAuthorized().pipe(shareReplay(1));\r\n    this.initializeMobileButtonsSubscribtion();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener('keydown', this.ESCBtnPressHandler);\r\n    this.removeMobileButtonsSubscriptions();\r\n  }\r\n\r\n  public openCloseMenu(menuId: number = null): void {\r\n    if (this.currentMenuId == -1) {\r\n      ++this.currentMenuId;\r\n    } else if (!menuId) {\r\n      --this.currentMenuId;\r\n    } else {\r\n      this.currentMenuId = menuId;\r\n    }\r\n    if (this.currentMenuId == -1) {\r\n      startGameInterval();\r\n    } else {\r\n      clearGameInterval();\r\n    }\r\n  }\r\n\r\n  public initRestartKeyListener(): void {\r\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      if (event.keyCode === 82 && !this.isLevelFinished) {\r\n        this.startLevel();\r\n      }\r\n    });\r\n  }\r\n\r\n  public startLevel({ preloadData, size } = { preloadData: null, size: null }): void {\r\n    this.isLevelFinished = false;\r\n    clearInterval(this.interval);\r\n    startLevel(preloadData, size);\r\n    this.interval = setInterval(() => {\r\n      this.levelTime = getLevelTime();\r\n      if (getIsLevelFinished()) {\r\n        clearInterval(this.interval);\r\n        this.finishLevel();\r\n        this.levelFinishedEmitter.next();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  public finishLevel(): void {\r\n    clearGameInterval();\r\n    this.isLevelFinished = true;\r\n  }\r\n\r\n  public initializeMobileButtonsSubscribtion(): void {\r\n    const btnTop = document.getElementById('btn-top'),\r\n      btnRight = document.getElementById('btn-right'),\r\n      btnLeft = document.getElementById('btn-left'),\r\n      btnBottom = document.getElementById('btn-bottom');\r\n\r\n    btnTop.addEventListener('mousedown', playerMoveForward);\r\n    btnTop.addEventListener('mouseup', playerStopMoving);\r\n    btnBottom.addEventListener('mousedown', playerMoveBack);\r\n    btnBottom.addEventListener('mouseup', playerStopMoving);\r\n\r\n    btnRight.addEventListener('mousedown', playerRotateRight);\r\n    btnRight.addEventListener('mouseup', playerStopRotating);\r\n\r\n    btnLeft.addEventListener('mousedown', playerRotateLeft);\r\n    btnLeft.addEventListener('mouseup', playerStopRotating);\r\n  }\r\n\r\n  public removeMobileButtonsSubscriptions(): void {\r\n    const btnTop = document.getElementById('btn-top'),\r\n      btnRight = document.getElementById('btn-right'),\r\n      btnLeft = document.getElementById('btn-left'),\r\n      btnBottom = document.getElementById('btn-bottom');\r\n\r\n    btnTop.removeEventListener('mousedown', playerMoveForward);\r\n    btnTop.removeEventListener('mouseup', playerStopMoving);\r\n    btnBottom.removeEventListener('mousedown', playerMoveBack);\r\n    btnBottom.removeEventListener('mouseup', playerStopMoving);\r\n\r\n    btnRight.removeEventListener('mousedown', playerRotateRight);\r\n    btnRight.removeEventListener('mouseup', playerStopRotating);\r\n\r\n    btnLeft.removeEventListener('mousedown', playerRotateLeft);\r\n    btnLeft.removeEventListener('mouseup', playerStopRotating);\r\n  }\r\n}\r\n","<canvas id=\"canvas\"></canvas>\r\n<canvas id=\"canvasPlayWindow\"></canvas>\r\n\r\n<div class=\"buttons-layer\">\r\n  <button\r\n    class=\"open-menu-button\"\r\n    color=\"primary\"\r\n    mat-fab\r\n    aria-label=\"Example icon button with a menu icon\"\r\n    (click)=\"openCloseMenu()\"\r\n  >\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <div class=\"move-buttons\">\r\n    <div class=\"button-pair-wrapper\">\r\n      <button mat-flat-button class=\"control-button\" id=\"btn-top\"></button>\r\n      <button mat-flat-button class=\"control-button\" id=\"btn-right\"></button>\r\n    </div>\r\n    <div class=\"button-pair-wrapper\">\r\n      <button mat-flat-button class=\"control-button\" id=\"btn-left\"></button>\r\n      <button mat-flat-button class=\"control-button\" id=\"btn-bottom\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"timer\">{{ levelTime }}</div>\r\n\r\n<app-menu\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel($event)\"\r\n  *ngIf=\"currentMenuId == 0\"\r\n  [isAuthorizedUser]=\"isAuthorizedUser$ | async\"\r\n></app-menu>\r\n<app-game-loads\r\n  *ngIf=\"currentMenuId == 1\"\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel($event)\"\r\n>\r\n</app-game-loads>\r\n<app-finish-window\r\n  [levelFinishedEmitter]=\"levelFinishedEmitter.asObservable()\"\r\n  [finishTime]=\"levelTime\"\r\n  (startNewLevel)=\"startLevel()\"\r\n></app-finish-window>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-game-loads',\n  templateUrl: './game-loads.component.html',\n  styleUrls: ['./game-loads.component.scss'],\n})\nexport class GameLoadsComponent implements OnInit {\n  @Output() openCloseMenu = new EventEmitter();\n  @Output() startLevel = new EventEmitter();\n  public gameSaves$: Observable<any>;\n  constructor(\n    private loginService: LoginService,\n    private gameSaveLoadService: GameSaveLoadService\n  ) {}\n  dateFormat = 'MMM d, y, HH:mm:ss';\n  ngOnInit(): void {\n    this.gameSaves$ = this.gameSaveLoadService.getGameSaves(this.loginService.currentUserId);\n  }\n\n  public loadGame(saveId: string) {\n    this.gameSaveLoadService\n      .getGameData(saveId, this.loginService.currentUserId)\n      .pipe(take(1))\n      .subscribe((gameSave) => {\n        this.openCloseMenu.emit(-1);\n        this.startLevel.emit({ preloadData: gameSave });\n      });\n  }\n}\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <div class=\"inside-container\">\n      <ng-container *ngIf=\"gameSaves$ | async as gameSaves\">\n        <ng-container *ngIf=\"gameSaves.length; else nothingFound\">\n          <button\n            class=\"modal-button\"\n            mat-raised-button\n            *ngFor=\"let save of gameSaves\"\n            (click)=\"loadGame(save._id)\"\n          >\n            <span>{{ save.timestamp | date: dateFormat }} </span>\n            <span *ngIf=\"save.levelPreload.levelSize as lvlSize\" class=\"lvl-size\"\n              >{{ lvlSize }}x{{ lvlSize }}\n            </span>\n            <span>{{ save.levelTime / 1000 }}s </span>\n          </button>\n        </ng-container>\n        <ng-template #nothingFound>\n          <h2 class=\"modal-text\">No game saves to load</h2>\n        </ng-template>\n      </ng-container>\n    </div>\n  </mat-card>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { shareReplay, take } from 'rxjs/operators';\r\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { createGameSave, startLevel } from '../scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  @Input() isAuthorizedUser;\r\n  @Output() openCloseMenu = new EventEmitter();\r\n  @Output() startLevel = new EventEmitter();\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private gameSaveLoadService: GameSaveLoadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public logOut(): void {\r\n    this.loginService.logOut();\r\n  }\r\n\r\n  public loadGame() {\r\n    this.openCloseMenu.emit(1);\r\n  }\r\n\r\n  public startLevelNewLevel() {\r\n    this.openCloseMenu.emit(-1);\r\n    this.startLevel.emit({ size: 40 });\r\n  }\r\n\r\n  public saveGame() {\r\n    this.gameSaveLoadService\r\n      .saveGameData(createGameSave(), this.loginService.currentUserId)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this.openCloseMenu.emit(-1);\r\n      });\r\n  }\r\n}\r\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <button class=\"modal-button\" mat-raised-button (click)=\"openCloseMenu.emit()\">\n      Back to game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"startLevelNewLevel()\">\n      Start new level\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"loadGame()\" *ngIf=\"isAuthorizedUser\">\n      Load game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"saveGame()\" *ngIf=\"isAuthorizedUser\">\n      Save game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"logOut()\">Quit</button>\n  </mat-card>\n</div>\n","let canvas: HTMLCanvasElement;\r\nlet canvasPlayWindow: HTMLCanvasElement;\r\nlet body: HTMLBodyElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ctxPlay: CanvasRenderingContext2D;\r\n\r\nlet currentLevel: Level;\r\nlet currentPlayer: Player;\r\nconst defaultMoveVelocity = 0.75;\r\nconst defaultRotateVelocity = 3;\r\nconst textureDim = 64;\r\nconst defaultLevelSize = 50;\r\nconst rayCount = 384;\r\nconst FPS: number = 60;\r\nconst FOV = 76;\r\nconst halfFOV = FOV / 2;\r\nconst mainColor: string = '#000';\r\nconst secondaryColor: string = '#666';\r\nconst thirdColor: string = '#5d7';\r\nconst playerColor: string = '#1d7';\r\nconst canvasWidth: number = 1280;\r\nconst canvasHeight: number = 720;\r\nconst playerEyesVerticalPosition = [-10, 15];\r\nconst playerEyesVerticalChange = [-2.3, 1.5];\r\nlet isLevelFinished = false;\r\n\r\nlet textures = new Image();\r\ntextures.src = './assets/images/walls.png';\r\n\r\nfunction normilizeAngle(angle: number) {\r\n  angle = angle % (2 * Math.PI);\r\n\r\n  if (angle < 0) {\r\n    angle += 2 * Math.PI;\r\n  }\r\n\r\n  return angle;\r\n}\r\n\r\nfunction calculateDistance(x1: number, y1: number, x2: number, y2: number) {\r\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n}\r\n\r\nfunction convertToRadians(angle: number) {\r\n  return angle * (Math.PI / 180);\r\n}\r\n\r\nexport function createGameSave() {\r\n  return {\r\n    playerPreload: currentPlayer.getPlayerData(),\r\n    levelPreload: currentLevel.getLevelData(),\r\n    levelTime: levelTimer.time,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\n// function rescaleCanvas(canvas: HTMLCanvasElement) {\r\n//     canvas.style.width = `${document.body.clientWidth}px`;\r\n//     canvas.style.height = `${document.body.clientHeight}px`;\r\n// }\r\n\r\nclass Ray {\r\n  ctx: CanvasRenderingContext2D;\r\n  level: Level;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  angleIncrement: number;\r\n  columnIndex: number;\r\n  xIntercept: any;\r\n  yIntercept: any;\r\n  isLookingDown: boolean = false;\r\n  isLookingLeft: boolean = false;\r\n  yStep: number = 0;\r\n  xStep: number = 0;\r\n  wallHitX: number;\r\n  wallHitY: number;\r\n  wallHitXHorizontal: number;\r\n  wallHitYHorizontal: number;\r\n  wallHitYVertical: number;\r\n  wallHitXVertical: number;\r\n  distanceToWall: number;\r\n  playerAngle: any;\r\n  texturePixel: number;\r\n  textureId: number;\r\n\r\n  constructor(\r\n    ctx: CanvasRenderingContext2D,\r\n    level: Level,\r\n    x: number,\r\n    y: number,\r\n    playerRotateAngle: number,\r\n    angleIncrement: number,\r\n    columnIndex: number\r\n  ) {\r\n    this.ctx = ctx;\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.angle = playerRotateAngle;\r\n    this.angleIncrement = angleIncrement;\r\n    this.columnIndex = columnIndex;\r\n    this.distanceToWall = 0;\r\n    this.wallHitX = 0;\r\n    this.wallHitY = 0;\r\n    this.wallHitXHorizontal = 0;\r\n    this.wallHitYHorizontal = 0;\r\n    this.wallHitXVertical = 0;\r\n    this.wallHitYVertical = 0;\r\n    this.texturePixel = 0;\r\n    this.textureId = 0;\r\n  }\r\n\r\n  public setAngleAndPosition(angle: number, x: number, y: number): void {\r\n    this.playerAngle = angle;\r\n    this.angle = normilizeAngle(angle + this.angleIncrement);\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public cast(): void {\r\n    this.xIntercept = 0;\r\n    this.yIntercept = 0;\r\n    this.xStep = 0;\r\n    this.yStep = 0;\r\n    this.isLookingDown = false;\r\n    this.isLookingLeft = false;\r\n    this.angle < Math.PI && (this.isLookingDown = true);\r\n    this.angle > Math.PI / 2 && this.angle < (3 * Math.PI) / 2 && (this.isLookingLeft = true);\r\n    let tan = Math.tan(this.angle);\r\n\r\n    let yTemp = this.y / this.level.tileSize;\r\n    this.yIntercept =\r\n      (this.isLookingDown ? Math.ceil(yTemp) : Math.floor(yTemp)) * this.level.tileSize; //tile y coord\r\n    this.xIntercept = this.x + (this.yIntercept - this.y) / tan; //neighbor tile\r\n\r\n    this.yStep = this.isLookingDown ? this.level.tileSize : -this.level.tileSize; //calculating Y step\r\n    this.xStep = this.yStep / tan; //calculating X step according to angle\r\n    let nextXHorizontal = this.xIntercept;\r\n    let nextYHorizontal = this.yIntercept;\r\n    !this.isLookingDown && --nextYHorizontal; //to count tile behind current wall\r\n\r\n    let isCollidingHorizontal = false;\r\n    while (\r\n      !isCollidingHorizontal &&\r\n      nextXHorizontal >= 0 &&\r\n      nextXHorizontal <= canvasWidth &&\r\n      nextYHorizontal >= 0 &&\r\n      nextYHorizontal <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXHorizontal / this.level.tileSize) ^ 0; //j for level array\r\n      let yCollision = (nextYHorizontal / this.level.tileSize) ^ 0; //i for level array\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingHorizontal = true;\r\n        this.wallHitXHorizontal = nextXHorizontal;\r\n        this.wallHitYHorizontal = nextYHorizontal;\r\n      } else {\r\n        nextXHorizontal += this.xStep;\r\n        nextYHorizontal += this.yStep;\r\n      }\r\n    }\r\n\r\n    let tempX = this.x / this.level.tileSize;\r\n    this.xIntercept =\r\n      (this.isLookingLeft ? Math.floor(tempX) : Math.ceil(tempX)) * this.level.tileSize; //tile x coord\r\n    this.yIntercept = this.y + (this.xIntercept - this.x) * tan;\r\n    this.xStep = this.isLookingLeft ? -this.level.tileSize : this.level.tileSize;\r\n    this.yStep = this.xStep * tan;\r\n    let nextXVertical = this.xIntercept;\r\n    let nextYVertical = this.yIntercept;\r\n    this.isLookingLeft && --nextXVertical;\r\n    let isCollidingVertical = false;\r\n    while (\r\n      !isCollidingVertical &&\r\n      nextXVertical >= 0 &&\r\n      nextXVertical <= canvasWidth &&\r\n      nextYVertical >= 0 &&\r\n      nextYVertical <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXVertical / this.level.tileSize) ^ 0;\r\n      let yCollision = (nextYVertical / this.level.tileSize) ^ 0;\r\n\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingVertical = true;\r\n        this.wallHitXVertical = nextXVertical;\r\n        this.wallHitYVertical = nextYVertical;\r\n      } else {\r\n        nextXVertical += this.xStep;\r\n        nextYVertical += this.yStep;\r\n      }\r\n    }\r\n\r\n    // find distance\r\n    let horizontalDist = Number.MAX_VALUE;\r\n    let verticalDist = Number.MAX_VALUE;\r\n\r\n    if (isCollidingHorizontal) {\r\n      horizontalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXHorizontal,\r\n        this.wallHitYHorizontal\r\n      );\r\n    }\r\n    if (isCollidingVertical) {\r\n      verticalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXVertical,\r\n        this.wallHitYVertical\r\n      );\r\n    }\r\n\r\n    if (horizontalDist < verticalDist) {\r\n      this.wallHitX = this.wallHitXHorizontal;\r\n      this.wallHitY = this.wallHitYHorizontal;\r\n      this.distanceToWall = horizontalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitX - ((this.wallHitX / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    } else {\r\n      this.wallHitX = this.wallHitXVertical;\r\n      this.wallHitY = this.wallHitYVertical;\r\n      this.distanceToWall = verticalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitY - ((this.wallHitY / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    }\r\n\r\n    this.level.clearMaskTile(this.wallHitX, this.wallHitY, this.isLookingDown, this.isLookingLeft);\r\n    this.texturePixel = this.texturePixel ^ 0;\r\n    this.textureId = this.level.getTile(this.wallHitX, this.wallHitY) - 1;\r\n    // this.textureId = horizontalDist < verticalDist ? 0 : 1;\r\n  }\r\n\r\n  public renderWall(ctx: CanvasRenderingContext2D, eyesLevel: number): void {\r\n    const defaultWallHeight = this.level.tileSize;\r\n    const defaultDistance = -(canvasHeight / 3) / Math.tan(halfFOV); //negative to become positive\r\n    this.distanceToWall = this.distanceToWall * Math.cos(this.angle - this.playerAngle); //fisheye fix\r\n    let wallHeight = (defaultWallHeight / this.distanceToWall) * defaultDistance;\r\n\r\n    let y0 = ((canvasHeight / 2) ^ 0) - ((wallHeight / 2) ^ 0);\r\n    let y1 = y0 + wallHeight;\r\n\r\n    let imageHeight = y0 - y1;\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    ctx.drawImage(\r\n      textures,\r\n      this.texturePixel,\r\n      this.textureId * textureDim,\r\n      1,\r\n      textureDim,\r\n      this.columnIndex * (canvasWidth / rayCount),\r\n      y1 + eyesLevel,\r\n      canvasWidth / rayCount,\r\n      imageHeight\r\n    );\r\n    // ctx.fillStyle = `#888`;\r\n    // if(this.textureId) {\r\n    //     ctx.fillStyle = `#aaa`;\r\n    // }\r\n    // ctx.fillRect(\r\n    //     this.columnIndex * (canvasWidth/rayCount),\r\n    //     y1 + eyesLevel,\r\n    //     canvasWidth/rayCount,\r\n    //     imageHeight\r\n    // )\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.x, this.y);\r\n    this.ctx.lineTo(this.wallHitX, this.wallHitY);\r\n    this.ctx.strokeStyle = '#f33';\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n  }\r\n}\r\n\r\nclass Player {\r\n  ctx: CanvasRenderingContext2D;\r\n  currentLevel: Level;\r\n  x: number;\r\n  y: number;\r\n  moveState: number;\r\n  rotateState: number;\r\n  rotateAngle: number;\r\n  moveVelocity: number;\r\n  rotateVelocity: number;\r\n  rays: Ray[] = [];\r\n  rayCount: number;\r\n  eyesLevel: number;\r\n  doesEyesLevelChangingUp: boolean;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, currentLevel: Level, playerPreload: any) {\r\n    this.ctx = ctx;\r\n    this.currentLevel = currentLevel;\r\n    // random start\r\n    // this.x = currentLevel.startingPoint.j * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    // this.y = currentLevel.startingPoint.i * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    if (playerPreload) {\r\n      this.x = playerPreload.playerCoords.x;\r\n      this.y = playerPreload.playerCoords.y;\r\n      this.rotateAngle = playerPreload.playerRotateAngle;\r\n    } else {\r\n      this.x = currentLevel.tileSize * 1.5;\r\n      this.y = currentLevel.tileSize * 1.5;\r\n      this.rotateAngle = 0;\r\n    }\r\n\r\n    this.moveState = 0;\r\n    this.rotateState = 0;\r\n    this.eyesLevel = 0;\r\n    this.doesEyesLevelChangingUp = true;\r\n    this.moveVelocity = (1 / this.currentLevel.tilesCount) * 50 * defaultMoveVelocity;\r\n    this.rotateVelocity = (defaultRotateVelocity * Math.PI) / 180;\r\n    this.rayCount = rayCount;\r\n\r\n    let angleIncrementForRays = convertToRadians(FOV / this.rayCount);\r\n    let raysStartAngle = convertToRadians(this.rotateAngle - halfFOV);\r\n\r\n    for (let i = 0; i < this.rayCount; ++i, raysStartAngle += angleIncrementForRays) {\r\n      this.rays[i] = new Ray(\r\n        this.ctx,\r\n        this.currentLevel,\r\n        this.x,\r\n        this.y,\r\n        this.rotateAngle,\r\n        raysStartAngle,\r\n        i\r\n      );\r\n    }\r\n  }\r\n\r\n  public isOnFinish(): boolean {\r\n    return (\r\n      ((this.x / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.j &&\r\n      ((this.y / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.i\r\n    );\r\n  }\r\n\r\n  public getPlayerData(): {\r\n    playerCoords: {\r\n      x: number;\r\n      y: number;\r\n    };\r\n    playerRotateAngle: number;\r\n  } {\r\n    return {\r\n      playerCoords: {\r\n        x: this.x,\r\n        y: this.y,\r\n      },\r\n      playerRotateAngle: this.rotateAngle,\r\n    };\r\n  }\r\n\r\n  public tick(): void {\r\n    this.updatePosition();\r\n    this.castRays();\r\n    this.renderRays();\r\n    this.draw();\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.fillStyle = playerColor;\r\n    this.ctx.fillRect(this.x - 3, this.y - 3, 6, 6);\r\n  }\r\n\r\n  public castRays(): void {\r\n    this.rays.forEach((ray) => ray.cast());\r\n    this.rays.forEach((ray) => ray.draw());\r\n  }\r\n\r\n  public renderRays(): void {\r\n    this.rays.forEach((ray) => ray.renderWall(ctxPlay, this.eyesLevel));\r\n  }\r\n\r\n  public forward(): void {\r\n    this.moveState = 1;\r\n  }\r\n\r\n  public back(): void {\r\n    this.moveState = -1;\r\n  }\r\n\r\n  public left(): void {\r\n    this.rotateState = -1;\r\n  }\r\n\r\n  public right(): void {\r\n    this.rotateState = 1;\r\n  }\r\n\r\n  public moveStateZero(): void {\r\n    this.moveState = 0;\r\n  }\r\n\r\n  public rotateStateZero(): void {\r\n    this.rotateState = 0;\r\n  }\r\n\r\n  public updatePosition(): void {\r\n    isLevelFinished = this.isOnFinish();\r\n    let newX = this.x + this.moveState * Math.cos(this.rotateAngle) * this.moveVelocity;\r\n    let newY = this.y + this.moveState * Math.sin(this.rotateAngle) * this.moveVelocity;\r\n\r\n    if (this.moveState) {\r\n      if (\r\n        this.eyesLevel > -playerEyesVerticalPosition[0] ||\r\n        this.eyesLevel < -playerEyesVerticalPosition[1]\r\n      ) {\r\n        if (this.doesEyesLevelChangingUp) {\r\n          this.eyesLevel = -playerEyesVerticalPosition[1];\r\n        } else {\r\n          this.eyesLevel = -playerEyesVerticalPosition[0];\r\n        }\r\n        this.doesEyesLevelChangingUp = !this.doesEyesLevelChangingUp;\r\n      }\r\n      if (this.doesEyesLevelChangingUp) {\r\n        this.eyesLevel += playerEyesVerticalChange[0] * defaultMoveVelocity;\r\n      } else {\r\n        this.eyesLevel += playerEyesVerticalChange[1] * defaultMoveVelocity;\r\n      }\r\n    }\r\n\r\n    !this.isCollision(newX, newY) && ((this.x = newX), (this.y = newY));\r\n\r\n    this.rotateAngle += this.rotateState * this.rotateVelocity;\r\n    this.rotateAngle = normilizeAngle(this.rotateAngle);\r\n\r\n    this.rays.forEach((ray) => ray.setAngleAndPosition(this.rotateAngle, this.x, this.y));\r\n  }\r\n\r\n  public isCollision(x: number, y: number): boolean {\r\n    let playerX = (x / this.currentLevel.tileSize) ^ 0;\r\n    let playerY = (y / this.currentLevel.tileSize) ^ 0;\r\n    return this.currentLevel.isCollision(playerX, playerY);\r\n  }\r\n}\r\n\r\nclass Level {\r\n  ctx: CanvasRenderingContext2D;\r\n  levelArray: any;\r\n  tilesCount: any;\r\n  canvasWidth: any;\r\n  canvasHeight: any;\r\n  tileSize: number;\r\n  startingPoint: { i: number; j: number };\r\n  finishPoint: { i: number; j: number };\r\n  mask: number[][];\r\n  constructor(ctx: CanvasRenderingContext2D, levelSize: number, levelPreload: any) {\r\n    this.ctx = ctx;\r\n    this.startingPoint = {\r\n      i: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n      j: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n    };\r\n\r\n    if (levelPreload) {\r\n      [this.levelArray, this.mask] = levelPreload.levelData;\r\n      this.finishPoint = levelPreload.finishPoint;\r\n      this.tilesCount = this.levelArray[0].length;\r\n    } else {\r\n      [this.levelArray, this.mask] = this.generateLevel(levelSize);\r\n      this.finishPoint = {\r\n        i: levelSize - 2,\r\n        j: levelSize - 2,\r\n      };\r\n      this.tilesCount = levelSize;\r\n    }\r\n\r\n    this.canvasWidth = canvas.width;\r\n    this.canvasHeight = canvas.height;\r\n    this.tileSize = this.tileSize = (this.canvasWidth / this.tilesCount) ^ 0;\r\n  }\r\n\r\n  public getLevelData(): {\r\n    levelData: [number[][], number[][]];\r\n    finishPoint: { i: number; j: number };\r\n    levelSize: number;\r\n  } {\r\n    return {\r\n      levelData: [this.levelArray, this.mask],\r\n      finishPoint: this.finishPoint,\r\n      levelSize: this.tilesCount,\r\n    };\r\n  }\r\n\r\n  public getTile(x: number, y: number): number {\r\n    return this.levelArray[(y / this.tileSize) ^ 0][(x / this.tileSize) ^ 0];\r\n  }\r\n\r\n  public generateLevel(size: number): [number[][], number[][]] {\r\n    let lvlMap: number[][] = Array(size);\r\n    let mask: number[][];\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      lvlMap[i] = Array(size).fill(1);\r\n    }\r\n    mask = lvlMap.map((row) => row.slice()); //.fill(0)\r\n    let lvlStack: { i: number; j: number }[] = [];\r\n\r\n    lvlStack.push({ i: 1, j: 1 });\r\n    let i = this.startingPoint.i,\r\n      j = this.startingPoint.j;\r\n    lvlMap[i][j] = 0;\r\n    while (1) {\r\n      // console.log('Searching neighbours of: ',i,j);\r\n      if (this.isAvailableAnyNeighbour(lvlMap, i, j)) {\r\n        lvlStack.push({ i, j });\r\n        let newI = i,\r\n          newJ = j;\r\n        while (1) {\r\n          newI = i;\r\n          newJ = j;\r\n          switch (Math.round(Math.random() * 4)) {\r\n            case 0:\r\n              newI = i - 1;\r\n              break;\r\n            case 1:\r\n              newJ = j - 1;\r\n              break;\r\n            case 2:\r\n              newI = i + 1;\r\n              break;\r\n            case 3:\r\n              newJ = j + 1;\r\n              break;\r\n          }\r\n          if (\r\n            newI > 0 &&\r\n            newI < size - 1 &&\r\n            newJ > 0 &&\r\n            newJ < size - 1 &&\r\n            lvlMap[newI][newJ] &&\r\n            lvlMap[newI][newJ] != 0 &&\r\n            !this.doesAnyRadiusNeighbourIsPartOfPath({ i, j }, lvlMap, newI, newJ)\r\n          )\r\n            break;\r\n        }\r\n        i = newI;\r\n        j = newJ;\r\n        lvlMap[i][j] = 0;\r\n      } else if (!lvlStack.length) {\r\n        break;\r\n      } else {\r\n        let previous = lvlStack.pop();\r\n        if (previous) {\r\n          i = previous.i;\r\n          j = previous.j;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.clearMapBlock(lvlMap, 2, 1, 1);\r\n    this.clearMapBlock(lvlMap, 2, size - 3, size - 3);\r\n    return [lvlMap, mask];\r\n  }\r\n\r\n  public clearMapBlock(lvlArray: number[][], size: number, i: number, j: number): void {\r\n    for (let x = i, xN = size; xN > 0; --xN, ++x) {\r\n      for (let y = j, yN = size; yN > 0; --yN, ++y) {\r\n        lvlArray[x][y] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  private isAvailableAnyNeighbour(lvlMap: number[][], i: number, j: number): boolean {\r\n    let isHavingSpareNeighbour = false;\r\n    let neighbourI = i,\r\n      neighbourJ = j;\r\n    for (let index = 0; index < 4; ++index) {\r\n      switch (index) {\r\n        case 0:\r\n          neighbourI = i - 1;\r\n          break;\r\n        case 1:\r\n          neighbourJ = j - 1;\r\n          break;\r\n        case 2:\r\n          neighbourI = i + 1;\r\n          break;\r\n        case 3:\r\n          neighbourJ = j + 1;\r\n          break;\r\n      }\r\n\r\n      if (\r\n        neighbourI > 0 &&\r\n        neighbourI < lvlMap.length - 1 &&\r\n        neighbourJ > 0 &&\r\n        neighbourJ < lvlMap.length - 1 &&\r\n        lvlMap[neighbourI][neighbourJ]\r\n      ) {\r\n        isHavingSpareNeighbour = true;\r\n        if (isHavingSpareNeighbour) {\r\n          isHavingSpareNeighbour = !this.doesAnyRadiusNeighbourIsPartOfPath(\r\n            { i, j },\r\n            lvlMap,\r\n            neighbourI,\r\n            neighbourJ\r\n          );\r\n        }\r\n        if (isHavingSpareNeighbour) break;\r\n      }\r\n\r\n      neighbourI = i;\r\n      neighbourJ = j;\r\n    }\r\n\r\n    return isHavingSpareNeighbour;\r\n  }\r\n\r\n  private doesAnyRadiusNeighbourIsPartOfPath(\r\n    exception: { i: number; j: number },\r\n    lvlMap: number[][],\r\n    neighbourI: number,\r\n    neighbourJ: number\r\n  ) {\r\n    // console.log('Subneighbour: ', neighbourI,neighbourJ);\r\n\r\n    let changes = { i: exception.i - neighbourI, j: exception.j - neighbourJ };\r\n    let anyNeighbourIsPath = false;\r\n    let startI = neighbourI,\r\n      endI = neighbourI,\r\n      startJ = neighbourJ,\r\n      endJ = neighbourJ;\r\n\r\n    if (changes.i > 0) {\r\n      startI -= 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.i < 0) {\r\n      endI += 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.j > 0) {\r\n      startJ -= 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    if (changes.j < 0) {\r\n      endJ += 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    // console.log(`ranges: [i : ${startI}, ${endI} j : ${startJ}, ${endJ}]`);\r\n\r\n    for (let i = startI; i <= endI; ++i) {\r\n      for (let j = startJ; j <= endJ; ++j) {\r\n        // console.log('Checking: ',i,j);\r\n        if (i > 0 && i < lvlMap.length - 1 && j > 0 && j < lvlMap.length - 1 && !lvlMap[i][j]) {\r\n          anyNeighbourIsPath = true;\r\n          // console.log(i, j, ' is 0');\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return anyNeighbourIsPath;\r\n  }\r\n\r\n  public clearMaskTile(hitX: number, hitY: number, down: boolean, left: boolean): void {\r\n    hitY += down ? 1 : -1;\r\n    hitX += left ? -1 : 1;\r\n    const jTileHit = (hitX / this.tileSize) ^ 0,\r\n      iTileHit = (hitY / this.tileSize) ^ 0;\r\n    this.mask[iTileHit][jTileHit] = 0;\r\n  }\r\n\r\n  public draw(ignoreMask: boolean = false) {\r\n    for (let i = 0; i < this.tilesCount; ++i) {\r\n      for (let j = 0; j < this.tilesCount; ++j) {\r\n        this.ctx.fillStyle =\r\n          this.levelArray[i][j] && (!this.mask[i][j] || ignoreMask) ? mainColor : secondaryColor;\r\n        this.ctx.fillRect(j * this.tileSize, i * this.tileSize, this.tileSize, this.tileSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  public drawFinishPoint() {\r\n    this.ctx.fillStyle = thirdColor;\r\n    this.ctx.fillRect(\r\n      this.finishPoint.j * this.tileSize,\r\n      this.finishPoint.i * this.tileSize,\r\n      this.tileSize,\r\n      this.tileSize\r\n    );\r\n  }\r\n\r\n  public isCollision(x: number, y: number) {\r\n    if (y >= this.levelArray.length) {\r\n      y = this.levelArray.length - 1;\r\n    }\r\n    return !!this.levelArray[y][x];\r\n  }\r\n}\r\n\r\nfunction paintFloorAndCeiling(ctx: CanvasRenderingContext2D) {\r\n  ctx.fillStyle = '#566';\r\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight / 2);\r\n\r\n  ctx.fillStyle = '#442300';\r\n  ctx.fillRect(0, canvasHeight / 2, canvasWidth, canvasHeight);\r\n}\r\n\r\nlet gameinterval: any;\r\nlet isGameRunning = false;\r\nlet timeInterval: any;\r\nlet audioObj: any = null;\r\n\r\nexport function startGameInterval() {\r\n  gameinterval = setInterval(draw, 1000 / FPS);\r\n  isGameRunning = true;\r\n}\r\n\r\nexport function clearGameInterval() {\r\n  clearInterval(gameinterval);\r\n  isGameRunning = false;\r\n}\r\n\r\nconst levelTimer = {\r\n  time: 0,\r\n};\r\n\r\nexport function getLevelTime(): string {\r\n  return (levelTimer.time / 1000).toFixed(1);\r\n}\r\n\r\nexport function getIsLevelFinished(): boolean {\r\n  return isLevelFinished;\r\n}\r\n\r\nfunction clearTimerInterval() {\r\n  clearInterval(timeInterval);\r\n  levelTimer.time = 0;\r\n}\r\n\r\nfunction startTimerInterval() {\r\n  timeInterval = setInterval(() => {\r\n    if (isGameRunning) {\r\n      levelTimer.time += 100;\r\n    }\r\n  }, 100);\r\n}\r\n\r\nexport function startLevel(loadGame: any = null, levelSize: number = null) {\r\n  isLevelFinished = false;\r\n  // audioObj?.pause();\r\n  // audioObj = null;\r\n  // audioObj = new Audio('./assets/audio/amogus.mp4');\r\n  // audioObj.addEventListener(\"canplaythrough\", () => {\r\n  //     audioObj.play();\r\n  // });\r\n\r\n  clearGameInterval();\r\n  clearTimerInterval();\r\n  startTimerInterval();\r\n\r\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n  canvasPlayWindow = document.getElementById('canvasPlayWindow') as HTMLCanvasElement;\r\n  ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  ctxPlay = canvasPlayWindow.getContext('2d') as CanvasRenderingContext2D;\r\n  // body = document.querySelector('body') as HTMLBodyElement;\r\n  // if (body) {\r\n  //   body.style.backgroundColor = secondaryColor;\r\n  // }\r\n  canvas.width = canvasHeight;\r\n  canvas.height = canvasHeight;\r\n\r\n  canvasPlayWindow.width = canvasWidth;\r\n  canvasPlayWindow.height = canvasHeight;\r\n  // rescaleCanvas(canvasPlayWindow);\r\n  loadGame && (levelTimer.time = loadGame.levelTime);\r\n  currentLevel = new Level(ctx, levelSize || defaultLevelSize, loadGame?.levelPreload);\r\n  currentPlayer = new Player(ctx, currentLevel, loadGame?.playerPreload);\r\n\r\n  startGameInterval();\r\n}\r\n\r\nfunction clearCanvas() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctxPlay.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nfunction draw() {\r\n  clearCanvas();\r\n  paintFloorAndCeiling(ctxPlay);\r\n  currentLevel.draw();\r\n  currentPlayer.tick();\r\n  // currentPlayer.updatePosition();\r\n  // currentPlayer.castRays();\r\n  // currentPlayer.renderRays();\r\n  // currentPlayer.draw();\r\n\r\n  currentLevel.drawFinishPoint();\r\n}\r\n\r\n// document.addEventListener('DOMContentLoaded', startLevel);\r\n\r\nexport function playerMoveForward() {\r\n  currentPlayer.forward();\r\n}\r\nexport function playerMoveBack() {\r\n  currentPlayer.back();\r\n}\r\nexport function playerStopMoving() {\r\n  currentPlayer.moveStateZero();\r\n}\r\nexport function playerRotateLeft() {\r\n  currentPlayer.left();\r\n}\r\nexport function playerRotateRight() {\r\n  currentPlayer.right();\r\n}\r\nexport function playerStopRotating() {\r\n  currentPlayer.rotateStateZero();\r\n}\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.left();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.right();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.forward();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.back();\r\n\r\n      break;\r\n    }\r\n    // case 82: {\r\n    //     startLevel();\r\n\r\n    //     break;\r\n    // }\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keyup', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n  }\r\n});\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './services/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginCheckGuard implements CanActivate {\n  constructor(private router: Router, private loginService: LoginService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isInLoginPage = state.url.includes('login') || state.url.includes('register');\n    if (this.loginService.isLoggedIn()) {\n      if (isInLoginPage) {\n        this.router.navigateByUrl('/game');\n      }\n      return true;\n    } else {\n      if (isInLoginPage) {\n        return true;\n      } else {\n        this.router.navigateByUrl('/login');\n        return false;\n      }\n    }\n  }\n}\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take } from 'rxjs/operators';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public loginForm = this.fb.group({\n    login: [null, Validators.required],\n    password: [null, [Validators.required, Validators.minLength(8)]],\n    passwordRepeat: [null, Validators.required],\n  });\n  public isOnLoginPage = new BehaviorSubject(null);\n\n  constructor(\n    private loginService: LoginService,\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isOnLoginPage.next(this.router.url.includes('login'));\n    const passwordRepeatField = this.loginForm.get('passwordRepeat');\n    this.activatedRoute.url.subscribe(() => {\n      this.isOnLoginPage.next(this.router.url.includes('login'));\n      const validators = [];\n      !this.isOnLoginPage.value && validators.push(Validators.required);\n      passwordRepeatField.setValidators(validators);\n    });\n    passwordRepeatField.valueChanges.subscribe((value) => {\n      if (value !== this.loginForm.get('password').value) {\n        passwordRepeatField.setErrors({\n          match: \"passwords doesn't match\",\n        });\n      } else {\n        passwordRepeatField.setErrors(null);\n      }\n    });\n  }\n\n  public logInAsGuest(): void {\n    this.loginService.logInAsGuest();\n  }\n\n  public logInAsUser(): void {\n    this.loginService\n      .logIn(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n\n  public register(): void {\n    this.loginService\n      .register(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n}\n","<div class=\"modal-background\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"logInAsGuest()\" class=\"as-guest\">\r\n    Play as guest\r\n  </button>\r\n  <mat-card class=\"modal-itself\">\r\n    <form [formGroup]=\"loginForm\" class=\"form\">\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Login</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"login\" placeholder=\"Login\" required />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('password').errors\"\r\n          >Min length of password is 8 symbols</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\" *ngIf=\"!(isOnLoginPage | async)\">\r\n        <mat-label>Repeat password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"passwordRepeat\"\r\n          placeholder=\"Repeat password\"\r\n          [required]=\"!(isOnLoginPage | async)\"\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('passwordRepeat').errors\">{{\r\n          loginForm.get('passwordRepeat').errors['match']\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n    <div class=\"login-buttons\">\r\n      <a routerLink=\"/register\" *ngIf=\"isOnLoginPage | async; else alreadyRegistered\"\r\n        >don't have account yet?</a\r\n      >\r\n      <ng-template #alreadyRegistered>\r\n        <a routerLink=\"/login\">already registered?</a>\r\n      </ng-template>\r\n\r\n      <button\r\n        class=\"modal-button sign-in-btn\"\r\n        mat-raised-button\r\n        (click)=\"logInAsUser()\"\r\n        [disabled]=\"!loginForm.valid\"\r\n        *ngIf=\"isOnLoginPage | async; else regButton\"\r\n      >\r\n        Sign in\r\n      </button>\r\n      <ng-template #regButton>\r\n        <button\r\n          class=\"modal-button sign-in-btn\"\r\n          mat-raised-button\r\n          (click)=\"register()\"\r\n          [disabled]=\"!loginForm.valid\"\r\n        >\r\n          Register\r\n        </button>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n@NgModule({\n  declarations: [],\n  exports: [MatButtonModule, MatIconModule, MatCardModule, MatFormFieldModule, MatInputModule],\n})\nexport class MaterialModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameSaveLoadService {\n  constructor(private router: Router, private http: HttpClient) {}\n\n  public saveGameData(payload: any, userId: string): Observable<any> {\n    return this.http.post<any>(`${URL}/save-game/${userId}`, payload);\n  }\n\n  public getGameData(saveId: string, userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/load-game/${saveId}/${userId}`);\n  }\n\n  public getGameSaves(userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/game-saves/${userId}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from, Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private router: Router, private http: HttpClient) {}\n  public isLoggedIn(): boolean {\n    return !!localStorage.getItem('userId');\n  }\n\n  public logInAsGuest(): void {\n    this.setUserIdToLocalStorage('guest');\n    this.router.navigateByUrl('/game');\n  }\n\n  public setUserIdToLocalStorage(userId: string): void {\n    localStorage.setItem('userId', userId);\n  }\n\n  public logIn({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/login`, { login, password });\n  }\n\n  public register({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/register`, { login, password });\n  }\n\n  public isAuthorized(): Observable<any> {\n    return this.http.get<any>(`${URL}/user-exists/${localStorage.getItem('userId')}`);\n  }\n\n  public logOut(): void {\n    localStorage.removeItem('userId');\n    this.router.navigateByUrl('/login');\n  }\n\n  public get currentUserId(): string {\n    return localStorage.getItem('userId');\n  }\n}\n","export const URL = 'https://raycast.herokuapp.com/api';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}