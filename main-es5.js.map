{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game-level/finish-window/finish-window.component.ts","webpack:///src/app/game-level/finish-window/finish-window.component.html","webpack:///src/app/game-level/game-level.component.ts","webpack:///src/app/game-level/game-level.component.html","webpack:///src/app/game-level/game-loads/game-loads.component.ts","webpack:///src/app/game-level/game-loads/game-loads.component.html","webpack:///src/app/game-level/menu/menu.component.ts","webpack:///src/app/game-level/menu/menu.component.html","webpack:///src/app/game-level/scripts/draw.ts","webpack:///src/app/game-level/size-choose/size-choose.component.ts","webpack:///src/app/game-level/size-choose/size-choose.component.html","webpack:///src/app/login-check.guard.ts","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/services/game-save-load.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/configuration/apiUrl.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FinishWindowComponent","gameSavesService","loginService","startNewLevel","isModalDisplayed","ngUnsubscribe$","levelFinishedEmitter","pipe","saveLevelFinishStats","currentUserId","subscribe","resultId","currentResultId","resultsTable$","getLevelTableStats","size","next","complete","emit","results","slice","resultIndex","find","element","index","_id","$event","GameLevelComponent","currentMenuId","ESCBtnPressHandler","event","keyCode","isLevelFinished","openCloseMenu","startLevel","initRestartKeyListener","document","addEventListener","isAuthorizedUser$","isAuthorized","removeEventListener","time","toFixed","fps","menuId","generateLevel","askLevelSize","preloadData","textureId","clearInterval","interval","setInterval","finishLevel","moveForward","stopMoving","rotateRight","stopRotating","rotateLeft","moveBackward","GameLoadsComponent","gameSaveLoadService","dateFormat","gameSaves$","getGameSaves","saveId","getGameData","gameSave","MenuComponent","logOut","saveGameData","startLevelNewLevel","canvas","canvasPlayWindow","body","ctx","ctxPlay","currentLevel","currentPlayer","defaultMoveVelocity","defaultRotateVelocity","textureDim","defaultLevelSize","rayCount","FOV","halfFOV","mainColor","secondaryColor","thirdColor","playerColor","canvasWidth","canvasHeight","playerEyesVerticalPosition","playerEyesVerticalChange","fpsLimit","ignoreMask","defaultTextureId","textures","Image","src","mapItemsAndEnemies","Enemy","player","level","isVisible","x","tileSize","y","getTextures","normilizeAngle","angle","Math","PI","getIsLevelFinished","value","getLevelStats","tilesCount","levelTimer","calculateDistance","x1","y1","x2","y2","sqrt","convertToRadians","createGameSave","playerPreload","getPlayerData","levelPreload","getLevelData","levelTime","timestamp","Date","Ray","playerRotateAngle","angleIncrement","columnIndex","isLookingDown","isLookingLeft","yStep","xStep","distanceToWall","wallHitX","wallHitY","wallHitXHorizontal","wallHitYHorizontal","wallHitXVertical","wallHitYVertical","texturePixel","playerAngle","xIntercept","yIntercept","tan","yTemp","ceil","floor","nextXHorizontal","nextYHorizontal","isCollidingHorizontal","xCollision","yCollision","isCollision","tempX","nextXVertical","nextYVertical","isCollidingVertical","horizontalDist","Number","MAX_VALUE","verticalDist","isHittingHorizontal","clearMaskTile","getTile","eyesLevel","defaultWallHeight","defaultDistance","cos","wallHeight","y0","imageHeight","imageSmoothingEnabled","drawImage","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","Player","rays","playerCoords","rotateAngle","moveState","rotateState","doesEyesLevelChangingUp","angleIncrementForRays","raysStartAngle","i","finishPoint","j","updatePosition","castRays","renderRays","draw","fillStyle","fillRect","forEach","ray","cast","renderWall","moveVelocity","rotateVelocity","isOnFinish","newX","newY","sin","setAngleAndPosition","playerX","playerY","Level","levelSize","startingPoint","round","random","levelData","levelArray","mask","length","width","height","spritesArray","Array","fill","lvlMap","map","row","lvlStack","push","isAvailableAnyNeighbour","newI","newJ","doesAnyRadiusNeighbourIsPartOfPath","previous","pop","clearMapBlock","lvlArray","xN","yN","isHavingSpareNeighbour","neighbourI","neighbourJ","exception","changes","anyNeighbourIsPath","startI","endI","startJ","endJ","hitX","hitY","down","left","jTileHit","iTileHit","paintFloorAndCeiling","gameInterval","isGameRunning","timeInterval","audioObj","gameTime","animationData","localFPS","animationFrameRepeat","timeSpent","requestAnimationFrame","startGameInterval","clearGameInterval","cancelAnimationFrame","clearTimerInterval","startTimerInterval","loadGame","getElementById","getContext","clearCanvas","clearRect","tick","drawFinishPoint","playerMoveForward","forward","playerMoveBack","back","playerStopMoving","moveStateZero","playerRotateLeft","playerRotateRight","right","playerStopRotating","rotateStateZero","SizeChooseComponent","beginLevel","sizes","console","log","activeTextureId","LoginCheckGuard","router","state","isInLoginPage","url","includes","isLoggedIn","navigateByUrl","providedIn","LoginPageComponent","fb","activatedRoute","loginForm","group","login","required","password","minLength","passwordRepeat","isOnLoginPage","passwordRepeatField","get","validators","setValidators","valueChanges","setErrors","match","logInAsGuest","logIn","error","response","alert","setUserIdToLocalStorage","userId","register","MaterialModule","GameSaveLoadService","http","payload","post","LoginService","localStorage","getItem","setItem","removeItem","URL","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameLevelComponent } from './game-level/game-level.component';\r\nimport { LoginCheckGuard } from './login-check.guard';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'game',\r\n    component: GameLevelComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: LoginPageComponent,\r\n    canActivate: [LoginCheckGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'game';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { GameLevelComponent } from './game-level/game-level.component';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { MenuComponent } from './game-level/menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { FinishWindowComponent } from './game-level/finish-window/finish-window.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GameLoadsComponent } from './game-level/game-loads/game-loads.component';\nimport { SizeChooseComponent } from './game-level/size-choose/size-choose.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameLevelComponent,\n    LoginPageComponent,\n    MenuComponent,\n    FinishWindowComponent,\n    GameLoadsComponent,\n    SizeChooseComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    RouterModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { getLevelStats } from '../scripts/draw';\n\n@Component({\n  selector: 'app-finish-window',\n  templateUrl: './finish-window.component.html',\n  styleUrls: ['./finish-window.component.scss'],\n})\nexport class FinishWindowComponent implements OnInit, OnDestroy {\n  @Input() levelFinishedEmitter: Observable<void>;\n  @Input() finishTime: string;\n  @Output() startNewLevel = new EventEmitter();\n  public isModalDisplayed = false;\n  public resultsTable$: Observable<any>;\n  public currentResultId: string;\n  private ngUnsubscribe$ = new Subject();\n  constructor(private gameSavesService: GameSaveLoadService, private loginService: LoginService) {}\n\n  ngOnInit() {\n    this.levelFinishedEmitter\n      .pipe(\n        takeUntil(this.ngUnsubscribe$),\n        switchMap(() => {\n          return this.gameSavesService.saveLevelFinishStats(\n            getLevelStats(),\n            this.loginService.currentUserId\n          );\n        })\n      )\n      .subscribe(({ resultId }) => {\n        this.isModalDisplayed = true;\n        this.currentResultId = resultId;\n        this.resultsTable$ = this.gameSavesService.getLevelTableStats(getLevelStats().size);\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe$.next();\n    this.ngUnsubscribe$.complete();\n  }\n\n  public restartLevel() {\n    this.startNewLevel.emit(true);\n    this.isModalDisplayed = false;\n  }\n\n  public getTop5Results(results): any[] {\n    return results.slice(0, 5);\n  }\n\n  public getExactResultInfo(id: string, results: any[]): any {\n    let resultIndex = 0;\n    return {\n      ...results.find((element, index) => element._id === id && (resultIndex = index + 1)),\n      index: resultIndex,\n    };\n  }\n}\n","<div class=\"modal-background\" *ngIf=\"isModalDisplayed\">\n  <mat-card class=\"modal-itself\">\n    <h2 class=\"modal-text\">Your time is: {{ finishTime }} seconds!</h2>\n    <div class=\"score-table\" *ngIf=\"this.resultsTable$ | async as results\">\n      <div\n        *ngFor=\"let result of getTop5Results(results); let i = index\"\n        class=\"modal-text table-item\"\n        [ngClass]=\"{ hightlighted: currentResultId == result._id }\"\n      >\n        <span class=\"index\">{{ i + 1 }}</span>\n        <span class=\"user-login\"> {{ result.user.login }} </span>\n        <span> {{ result.time }}s </span>\n      </div>\n      <ng-container *ngIf=\"getExactResultInfo(currentResultId, results) as result\">\n        <ng-container *ngIf=\"result.index > 5\">\n          <div class=\"modal-text table-item\">\n            <span>⋮</span>\n          </div>\n          <div\n            class=\"modal-text table-item\"\n            [ngClass]=\"{ hightlighted: currentResultId == result._id }\"\n          >\n            <span class=\"index\">{{ result.index }}</span>\n            <span class=\"user-login\"> {{ result.user.login }} </span>\n            <span> {{ result.time }}s </span>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n    <button class=\"modal-button\" mat-raised-button (click)=\"restartLevel()\">Start new level</button>\n  </mat-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\nimport { LoginService } from '../services/login.service';\r\nimport {\r\n  startLevel,\r\n  startGameInterval,\r\n  clearGameInterval,\r\n  levelTimer,\r\n  getIsLevelFinished,\r\n  playerStopMoving,\r\n  playerStopRotating,\r\n  playerMoveBack,\r\n  playerMoveForward,\r\n  playerRotateLeft,\r\n  playerRotateRight,\r\n  animationData,\r\n} from './scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-game-level',\r\n  templateUrl: './game-level.component.html',\r\n  styleUrls: ['./game-level.component.scss'],\r\n})\r\nexport class GameLevelComponent implements OnInit, OnDestroy {\r\n  constructor(private loginService: LoginService) {}\r\n  public levelFinishedEmitter = new Subject();\r\n  public isLevelFinished: boolean;\r\n  public isAuthorizedUser$;\r\n  public currentMenuId = -1;\r\n  private interval;\r\n  private ESCBtnPressHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27 && !this.isLevelFinished) {\r\n      this.openCloseMenu();\r\n    }\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.startLevel(true);\r\n    this.initRestartKeyListener();\r\n    document.addEventListener('keydown', this.ESCBtnPressHandler);\r\n    this.isAuthorizedUser$ = this.loginService.isAuthorized().pipe(shareReplay(1));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener('keydown', this.ESCBtnPressHandler);\r\n  }\r\n\r\n  public get levelTime() {\r\n    return (levelTimer.time / 1000).toFixed(1);\r\n  }\r\n\r\n  public get animationData() {\r\n    return animationData;\r\n  }\r\n\r\n  public get fps() {\r\n    return animationData.fps ^ 0;\r\n  }\r\n\r\n  public openCloseMenu(menuId: number = null): void {\r\n    if (this.currentMenuId == 2 && menuId != -1) {\r\n      this.generateLevel();\r\n      this.currentMenuId = -1;\r\n    } else if (this.currentMenuId == -1) {\r\n      ++this.currentMenuId;\r\n    } else if (!menuId) {\r\n      --this.currentMenuId;\r\n    } else {\r\n      this.currentMenuId = menuId;\r\n    }\r\n    if (this.currentMenuId == -1) {\r\n      startGameInterval();\r\n    } else {\r\n      clearGameInterval();\r\n    }\r\n  }\r\n\r\n  public initRestartKeyListener(): void {\r\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      if (event.keyCode === 82 && !this.isLevelFinished) {\r\n        this.startLevel(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  public startLevel(\r\n    askLevelSize = false,\r\n    { preloadData, size } = { preloadData: null, size: null }\r\n  ) {\r\n    if (askLevelSize) {\r\n      this.currentMenuId = 2;\r\n      clearGameInterval();\r\n    } else {\r\n      this.generateLevel({ preloadData, size, textureId: null });\r\n    }\r\n  }\r\n\r\n  public generateLevel(\r\n    { preloadData, size, textureId } = { preloadData: null, size: null, textureId: null }\r\n  ) {\r\n    this.isLevelFinished = false;\r\n    clearInterval(this.interval);\r\n    startLevel(preloadData, size, textureId);\r\n    this.interval = setInterval(() => {\r\n      if (getIsLevelFinished()) {\r\n        clearInterval(this.interval);\r\n        this.finishLevel();\r\n        this.levelFinishedEmitter.next();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  public finishLevel(): void {\r\n    clearGameInterval();\r\n    this.isLevelFinished = true;\r\n  }\r\n\r\n  public moveForward() {\r\n    playerMoveForward();\r\n  }\r\n\r\n  public moveBackward() {\r\n    playerMoveBack();\r\n  }\r\n\r\n  public rotateLeft() {\r\n    playerRotateLeft();\r\n  }\r\n\r\n  public rotateRight() {\r\n    playerRotateRight();\r\n  }\r\n\r\n  public stopRotating() {\r\n    playerStopRotating();\r\n  }\r\n\r\n  public stopMoving() {\r\n    playerStopMoving();\r\n  }\r\n}\r\n","<canvas id=\"canvas\"></canvas>\r\n<canvas id=\"canvasPlayWindow\"></canvas>\r\n\r\n<div class=\"buttons-layer\">\r\n  <button\r\n    class=\"open-menu-button\"\r\n    color=\"primary\"\r\n    mat-fab\r\n    aria-label=\"Example icon button with a menu icon\"\r\n    (click)=\"openCloseMenu()\"\r\n  >\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <div class=\"move-buttons\">\r\n    <div class=\"button-pair-wrapper\">\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-top\"\r\n        (touchstart)=\"moveForward()\"\r\n        (touchend)=\"stopMoving()\"\r\n      ></button>\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-right\"\r\n        (touchstart)=\"rotateRight()\"\r\n        (touchend)=\"stopRotating()\"\r\n      ></button>\r\n    </div>\r\n    <div class=\"button-pair-wrapper\">\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-left\"\r\n        (touchstart)=\"rotateLeft()\"\r\n        (touchend)=\"stopRotating()\"\r\n      ></button>\r\n      <button\r\n        mat-flat-button\r\n        class=\"control-button\"\r\n        id=\"btn-bottom\"\r\n        (touchstart)=\"moveBackward()\"\r\n        (touchend)=\"stopMoving()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"timer\">{{ levelTime }}</div>\r\n<div class=\"fps\">{{ fps }} FPS</div>\r\n\r\n<app-menu\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel($event)\"\r\n  *ngIf=\"currentMenuId == 0\"\r\n  [isAuthorizedUser]=\"isAuthorizedUser$ | async\"\r\n></app-menu>\r\n<app-game-loads\r\n  *ngIf=\"currentMenuId == 1\"\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (startLevel)=\"startLevel(null, $event)\"\r\n>\r\n</app-game-loads>\r\n<app-size-choose\r\n  *ngIf=\"currentMenuId == 2\"\r\n  (openCloseMenu)=\"openCloseMenu($event)\"\r\n  (beginLevel)=\"generateLevel($event)\"\r\n>\r\n</app-size-choose>\r\n<app-finish-window\r\n  [levelFinishedEmitter]=\"levelFinishedEmitter.asObservable()\"\r\n  [finishTime]=\"levelTime\"\r\n  (startNewLevel)=\"startLevel($event)\"\r\n></app-finish-window>\r\n\r\n<div class=\"rotate-device\">\r\n  <span>ROTATE YOUR DEVICE! </span>\r\n  <mat-icon aria-hidden=\"false\" aria-label=\"Example refresh icon\">refresh</mat-icon>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-game-loads',\n  templateUrl: './game-loads.component.html',\n  styleUrls: ['./game-loads.component.scss'],\n})\nexport class GameLoadsComponent implements OnInit {\n  @Output() openCloseMenu = new EventEmitter();\n  @Output() startLevel = new EventEmitter();\n  public gameSaves$: Observable<any>;\n  constructor(\n    private loginService: LoginService,\n    private gameSaveLoadService: GameSaveLoadService\n  ) {}\n  dateFormat = 'MMM d, y, HH:mm:ss';\n  ngOnInit(): void {\n    this.gameSaves$ = this.gameSaveLoadService.getGameSaves(this.loginService.currentUserId);\n  }\n\n  public loadGame(saveId: string) {\n    this.gameSaveLoadService\n      .getGameData(saveId, this.loginService.currentUserId)\n      .pipe(take(1))\n      .subscribe((gameSave) => {\n        this.openCloseMenu.emit(-1);\n        this.startLevel.emit({ preloadData: gameSave });\n      });\n  }\n}\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <div class=\"inside-container\">\n      <ng-container *ngIf=\"gameSaves$ | async as gameSaves\">\n        <ng-container *ngIf=\"gameSaves.length; else nothingFound\">\n          <button\n            class=\"modal-button\"\n            mat-raised-button\n            *ngFor=\"let save of gameSaves\"\n            (click)=\"loadGame(save._id)\"\n          >\n            <span>{{ save.timestamp | date: dateFormat }} </span>\n            <span *ngIf=\"save.levelPreload.levelSize as lvlSize\" class=\"lvl-size\"\n              >{{ lvlSize }}x{{ lvlSize }}\n            </span>\n            <span>{{ save.levelTime / 1000 }}s </span>\n          </button>\n        </ng-container>\n        <ng-template #nothingFound>\n          <h2 class=\"modal-text\">No game saves to load</h2>\n        </ng-template>\n      </ng-container>\n    </div>\n  </mat-card>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { shareReplay, take } from 'rxjs/operators';\r\nimport { GameSaveLoadService } from 'src/app/services/game-save-load.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { createGameSave, startLevel } from '../scripts/draw';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  @Input() isAuthorizedUser;\r\n  @Output() openCloseMenu = new EventEmitter();\r\n  @Output() startLevel = new EventEmitter();\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private gameSaveLoadService: GameSaveLoadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public logOut(): void {\r\n    this.loginService.logOut();\r\n  }\r\n\r\n  public loadGame() {\r\n    this.openCloseMenu.emit(1);\r\n  }\r\n\r\n  public startLevelNewLevel() {\r\n    this.openCloseMenu.emit(-1);\r\n    this.startLevel.emit(true);\r\n  }\r\n\r\n  public saveGame() {\r\n    this.gameSaveLoadService\r\n      .saveGameData(createGameSave(), this.loginService.currentUserId)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this.openCloseMenu.emit(-1);\r\n      });\r\n  }\r\n}\r\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <button class=\"modal-button\" mat-raised-button (click)=\"openCloseMenu.emit()\">\n      Back to game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"startLevelNewLevel()\">\n      Start new level\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"loadGame()\" *ngIf=\"isAuthorizedUser\">\n      Load game\n    </button>\n    <button class=\"modal-button\" mat-raised-button (click)=\"saveGame()\" *ngIf=\"isAuthorizedUser\">\n      Save game\n    </button>\n    <button class=\"modal-button\" color=\"warn\" mat-raised-button (click)=\"logOut()\">Log out</button>\n  </mat-card>\n</div>\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nlet canvas: HTMLCanvasElement;\r\nlet canvasPlayWindow: HTMLCanvasElement;\r\nlet body: HTMLBodyElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ctxPlay: CanvasRenderingContext2D;\r\n\r\nlet currentLevel: Level;\r\nlet currentPlayer: Player;\r\nconst defaultMoveVelocity = 31;\r\nconst defaultRotateVelocity = 3.2;\r\nconst textureDim = 64;\r\nconst defaultLevelSize = 40;\r\nconst rayCount = 221;\r\nconst FOV = 70;\r\nconst halfFOV = FOV / 2;\r\nconst mainColor: string = '#000';\r\nconst secondaryColor: string = '#666';\r\nconst thirdColor: string = '#5d7';\r\nconst playerColor: string = '#1d7';\r\nconst canvasWidth: number = 1178;\r\nconst canvasHeight: number = 512;\r\nconst playerEyesVerticalPosition = [-10, 15];\r\nconst playerEyesVerticalChange = [-1.4, 1];\r\nconst fpsLimit = 61;\r\nconst ignoreMask = false;\r\nexport const isLevelFinished = new BehaviorSubject(false);\r\nlet defaultTextureId = 1;\r\nlet textures = new Image();\r\ntextures.src = './assets/images/walls.png';\r\n\r\n// var itemTypes = [{ img: './assets/lamp.png', block: false }];\r\n\r\nvar mapItemsAndEnemies = [];\r\n\r\nclass Enemy {\r\n  player: Player;\r\n  level: Level;\r\n  x: number;\r\n  y: number;\r\n  isVisible: boolean;\r\n  constructor(player: Player, level: Level) {\r\n    this.player = player;\r\n    this.level = level;\r\n    this.isVisible = false;\r\n    this.x = level.tileSize * 2.5;\r\n    this.y = level.tileSize * 2.5;\r\n  }\r\n}\r\nexport function getTextures() {\r\n  return textures;\r\n}\r\n\r\nfunction normilizeAngle(angle: number) {\r\n  angle = angle % (2 * Math.PI);\r\n\r\n  if (angle < 0) {\r\n    angle += 2 * Math.PI;\r\n  }\r\n\r\n  return angle;\r\n}\r\n\r\nexport function getIsLevelFinished() {\r\n  return isLevelFinished.value;\r\n}\r\n\r\nexport function getLevelStats() {\r\n  return { size: currentLevel.tilesCount, time: levelTimer.time / 1000 };\r\n}\r\n\r\nfunction calculateDistance(x1: number, y1: number, x2: number, y2: number) {\r\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n}\r\n\r\nfunction convertToRadians(angle: number) {\r\n  return angle * (Math.PI / 180);\r\n}\r\n\r\nexport function createGameSave() {\r\n  return {\r\n    playerPreload: currentPlayer.getPlayerData(),\r\n    levelPreload: currentLevel.getLevelData(),\r\n    levelTime: levelTimer.time,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n// function rescaleCanvas(canvas: HTMLCanvasElement) {\r\n//     canvas.style.width = `${document.body.clientWidth}px`;\r\n//     canvas.style.height = `${document.body.clientHeight}px`;\r\n// }\r\n\r\nclass Ray {\r\n  ctx: CanvasRenderingContext2D;\r\n  level: Level;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  angleIncrement: number;\r\n  columnIndex: number;\r\n  xIntercept: any;\r\n  yIntercept: any;\r\n  isLookingDown: boolean = false;\r\n  isLookingLeft: boolean = false;\r\n  yStep: number = 0;\r\n  xStep: number = 0;\r\n  wallHitX: number;\r\n  wallHitY: number;\r\n  wallHitXHorizontal: number;\r\n  wallHitYHorizontal: number;\r\n  wallHitYVertical: number;\r\n  wallHitXVertical: number;\r\n  distanceToWall: number;\r\n  playerAngle: any;\r\n  texturePixel: number;\r\n  textureId: number;\r\n  isHittingHorizontal: boolean;\r\n  constructor(\r\n    ctx: CanvasRenderingContext2D,\r\n    level: Level,\r\n    x: number,\r\n    y: number,\r\n    playerRotateAngle: number,\r\n    angleIncrement: number,\r\n    columnIndex: number\r\n  ) {\r\n    this.ctx = ctx;\r\n    this.level = level;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.angle = playerRotateAngle;\r\n    this.angleIncrement = angleIncrement;\r\n    this.columnIndex = columnIndex;\r\n    this.distanceToWall = 0;\r\n    this.wallHitX = 0;\r\n    this.wallHitY = 0;\r\n    this.wallHitXHorizontal = 0;\r\n    this.wallHitYHorizontal = 0;\r\n    this.wallHitXVertical = 0;\r\n    this.wallHitYVertical = 0;\r\n    this.texturePixel = 0;\r\n    this.textureId = 0;\r\n  }\r\n\r\n  public setAngleAndPosition(angle: number, x: number, y: number): void {\r\n    this.playerAngle = angle;\r\n    this.angle = normilizeAngle(angle + this.angleIncrement);\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public cast(): void {\r\n    this.xIntercept = 0;\r\n    this.yIntercept = 0;\r\n    this.xStep = 0;\r\n    this.yStep = 0;\r\n    this.isLookingDown = false;\r\n    this.isLookingLeft = false;\r\n    this.angle < Math.PI && (this.isLookingDown = true);\r\n    this.angle > Math.PI / 2 && this.angle < (3 * Math.PI) / 2 && (this.isLookingLeft = true);\r\n    let tan = Math.tan(this.angle);\r\n\r\n    let yTemp = this.y / this.level.tileSize;\r\n    this.yIntercept =\r\n      (this.isLookingDown ? Math.ceil(yTemp) : Math.floor(yTemp)) * this.level.tileSize; //tile y coord\r\n    this.xIntercept = this.x + (this.yIntercept - this.y) / tan; //neighbor tile\r\n\r\n    this.yStep = this.isLookingDown ? this.level.tileSize : -this.level.tileSize; //calculating Y step\r\n    this.xStep = this.yStep / tan; //calculating X step according to angle\r\n    let nextXHorizontal = this.xIntercept;\r\n    let nextYHorizontal = this.yIntercept;\r\n    !this.isLookingDown && --nextYHorizontal; //to count tile behind current wall\r\n\r\n    let isCollidingHorizontal = false;\r\n    while (\r\n      !isCollidingHorizontal &&\r\n      nextXHorizontal >= 0 &&\r\n      nextXHorizontal <= canvasWidth &&\r\n      nextYHorizontal >= 0 &&\r\n      nextYHorizontal <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXHorizontal / this.level.tileSize) ^ 0; //j for level array\r\n      let yCollision = (nextYHorizontal / this.level.tileSize) ^ 0; //i for level array\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingHorizontal = true;\r\n        this.wallHitXHorizontal = nextXHorizontal;\r\n        this.wallHitYHorizontal = nextYHorizontal;\r\n      } else {\r\n        nextXHorizontal += this.xStep;\r\n        nextYHorizontal += this.yStep;\r\n      }\r\n    }\r\n\r\n    let tempX = this.x / this.level.tileSize;\r\n    this.xIntercept =\r\n      (this.isLookingLeft ? Math.floor(tempX) : Math.ceil(tempX)) * this.level.tileSize; //tile x coord\r\n    this.yIntercept = this.y + (this.xIntercept - this.x) * tan;\r\n    this.xStep = this.isLookingLeft ? -this.level.tileSize : this.level.tileSize;\r\n    this.yStep = this.xStep * tan;\r\n    let nextXVertical = this.xIntercept;\r\n    let nextYVertical = this.yIntercept;\r\n    this.isLookingLeft && --nextXVertical;\r\n    let isCollidingVertical = false;\r\n    while (\r\n      !isCollidingVertical &&\r\n      nextXVertical >= 0 &&\r\n      nextXVertical <= canvasWidth &&\r\n      nextYVertical >= 0 &&\r\n      nextYVertical <= canvasHeight\r\n    ) {\r\n      let xCollision = (nextXVertical / this.level.tileSize) ^ 0;\r\n      let yCollision = (nextYVertical / this.level.tileSize) ^ 0;\r\n\r\n      if (this.level.isCollision(xCollision, yCollision)) {\r\n        isCollidingVertical = true;\r\n        this.wallHitXVertical = nextXVertical;\r\n        this.wallHitYVertical = nextYVertical;\r\n      } else {\r\n        nextXVertical += this.xStep;\r\n        nextYVertical += this.yStep;\r\n      }\r\n    }\r\n\r\n    // find distance\r\n    let horizontalDist = Number.MAX_VALUE;\r\n    let verticalDist = Number.MAX_VALUE;\r\n\r\n    if (isCollidingHorizontal) {\r\n      horizontalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXHorizontal,\r\n        this.wallHitYHorizontal\r\n      );\r\n    }\r\n    if (isCollidingVertical) {\r\n      verticalDist = calculateDistance(\r\n        this.x,\r\n        this.y,\r\n        this.wallHitXVertical,\r\n        this.wallHitYVertical\r\n      );\r\n    }\r\n    this.isHittingHorizontal = horizontalDist < verticalDist;\r\n    if (this.isHittingHorizontal) {\r\n      this.wallHitX = this.wallHitXHorizontal;\r\n      this.wallHitY = this.wallHitYHorizontal;\r\n      this.distanceToWall = horizontalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitX - ((this.wallHitX / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    } else {\r\n      this.wallHitX = this.wallHitXVertical;\r\n      this.wallHitY = this.wallHitYVertical;\r\n      this.distanceToWall = verticalDist;\r\n      this.texturePixel =\r\n        ((this.wallHitY - ((this.wallHitY / this.level.tileSize) ^ 0) * this.level.tileSize) /\r\n          this.level.tileSize) *\r\n        textureDim;\r\n    }\r\n\r\n    this.level.clearMaskTile(this.wallHitX, this.wallHitY, this.isLookingDown, this.isLookingLeft);\r\n    this.texturePixel = this.texturePixel ^ 0;\r\n    this.textureId = this.level.getTile(this.wallHitX, this.wallHitY) - 1;\r\n    // this.textureId = horizontalDist < verticalDist ? 0 : 1;\r\n  }\r\n\r\n  public renderWall(ctx: CanvasRenderingContext2D, eyesLevel: number): void {\r\n    const defaultWallHeight = this.level.tileSize * 1.7;\r\n    const defaultDistance = -(canvasHeight / 3) / Math.tan(halfFOV); //negative to become positive\r\n    this.distanceToWall = this.distanceToWall * Math.cos(this.angle - this.playerAngle); //fisheye fix\r\n    let wallHeight = (defaultWallHeight / this.distanceToWall) * defaultDistance;\r\n\r\n    let y0 = ((canvasHeight / 2) ^ 0) - ((wallHeight / 2) ^ 0);\r\n    let y1 = y0 + wallHeight;\r\n\r\n    let imageHeight = y0 - y1;\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    ctx.drawImage(\r\n      textures,\r\n      this.texturePixel + (this.isHittingHorizontal ? 0 : 64),\r\n      this.textureId * textureDim,\r\n      1,\r\n      textureDim,\r\n      this.columnIndex * (canvasWidth / rayCount),\r\n      y1 + eyesLevel,\r\n      canvasWidth / rayCount,\r\n      imageHeight\r\n    );\r\n    // ctx.fillStyle = `#888`;\r\n    // if(this.textureId) {\r\n    //     ctx.fillStyle = `#aaa`;\r\n    // }\r\n    // ctx.fillRect(\r\n    //     this.columnIndex * (canvasWidth/rayCount),\r\n    //     y1 + eyesLevel,\r\n    //     canvasWidth/rayCount,\r\n    //     imageHeight\r\n    // )\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.x, this.y);\r\n    this.ctx.lineTo(this.wallHitX, this.wallHitY);\r\n    this.ctx.strokeStyle = '#f33';\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n  }\r\n}\r\n\r\nclass Player {\r\n  ctx: CanvasRenderingContext2D;\r\n  currentLevel: Level;\r\n  x: number;\r\n  y: number;\r\n  moveState: number;\r\n  rotateState: number;\r\n  rotateAngle: number;\r\n  moveVelocity: number;\r\n  rotateVelocity: number;\r\n  rays: Ray[] = [];\r\n  rayCount: number;\r\n  eyesLevel: number;\r\n  doesEyesLevelChangingUp: boolean;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, currentLevel: Level, playerPreload: any) {\r\n    this.ctx = ctx;\r\n    this.currentLevel = currentLevel;\r\n    // random start\r\n    // this.x = currentLevel.startingPoint.j * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    // this.y = currentLevel.startingPoint.i * currentLevel.tileSize + currentLevel.tileSize/2;\r\n    if (playerPreload) {\r\n      this.x = playerPreload.playerCoords.x;\r\n      this.y = playerPreload.playerCoords.y;\r\n      this.rotateAngle = playerPreload.playerRotateAngle;\r\n    } else {\r\n      this.x = currentLevel.tileSize * 1.5;\r\n      this.y = currentLevel.tileSize * 1.5;\r\n      this.rotateAngle = 0;\r\n    }\r\n\r\n    this.moveState = 0;\r\n    this.rotateState = 0;\r\n    this.eyesLevel = 0;\r\n    this.doesEyesLevelChangingUp = true;\r\n\r\n    this.rayCount = rayCount;\r\n\r\n    let angleIncrementForRays = convertToRadians(FOV / this.rayCount);\r\n    let raysStartAngle = convertToRadians(this.rotateAngle - halfFOV);\r\n\r\n    for (let i = 0; i < this.rayCount; ++i, raysStartAngle += angleIncrementForRays) {\r\n      this.rays[i] = new Ray(\r\n        this.ctx,\r\n        this.currentLevel,\r\n        this.x,\r\n        this.y,\r\n        this.rotateAngle,\r\n        raysStartAngle,\r\n        i\r\n      );\r\n    }\r\n  }\r\n\r\n  public isOnFinish(): boolean {\r\n    return (\r\n      ((this.x / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.j &&\r\n      ((this.y / this.currentLevel.tileSize) ^ 0) == this.currentLevel.finishPoint.i\r\n    );\r\n  }\r\n\r\n  public getPlayerData(): {\r\n    playerCoords: {\r\n      x: number;\r\n      y: number;\r\n    };\r\n    playerRotateAngle: number;\r\n  } {\r\n    return {\r\n      playerCoords: {\r\n        x: this.x,\r\n        y: this.y,\r\n      },\r\n      playerRotateAngle: this.rotateAngle,\r\n    };\r\n  }\r\n\r\n  public tick(fps: number): void {\r\n    this.updatePosition(fps);\r\n    this.castRays();\r\n    this.renderRays();\r\n    this.draw();\r\n  }\r\n\r\n  public draw(): void {\r\n    this.ctx.fillStyle = playerColor;\r\n    this.ctx.fillRect(this.x - 3, this.y - 3, 6, 6);\r\n  }\r\n\r\n  public castRays(): void {\r\n    this.rays.forEach((ray) => ray.cast());\r\n    this.rays.forEach((ray) => ray.draw());\r\n  }\r\n\r\n  public renderRays(): void {\r\n    this.rays.forEach((ray) => ray.renderWall(ctxPlay, this.eyesLevel));\r\n  }\r\n\r\n  public forward(): void {\r\n    this.moveState = 1;\r\n  }\r\n\r\n  public back(): void {\r\n    this.moveState = -1;\r\n  }\r\n\r\n  public left(): void {\r\n    this.rotateState = -1;\r\n  }\r\n\r\n  public right(): void {\r\n    this.rotateState = 1;\r\n  }\r\n\r\n  public moveStateZero(): void {\r\n    this.moveState = 0;\r\n  }\r\n\r\n  public rotateStateZero(): void {\r\n    this.rotateState = 0;\r\n  }\r\n\r\n  public updatePosition(fps: number): void {\r\n    this.moveVelocity =\r\n      ((this.currentLevel.tileSize / canvasHeight) * defaultMoveVelocity * fpsLimit) / fps;\r\n    this.rotateVelocity = (((defaultRotateVelocity * Math.PI) / 180) * fpsLimit) / fps;\r\n    isLevelFinished.next(this.isOnFinish());\r\n    let newX = this.x + this.moveState * Math.cos(this.rotateAngle) * this.moveVelocity;\r\n    let newY = this.y + this.moveState * Math.sin(this.rotateAngle) * this.moveVelocity;\r\n\r\n    if (this.moveState) {\r\n      if (\r\n        this.eyesLevel > -playerEyesVerticalPosition[0] ||\r\n        this.eyesLevel < -playerEyesVerticalPosition[1]\r\n      ) {\r\n        if (this.doesEyesLevelChangingUp) {\r\n          this.eyesLevel = -playerEyesVerticalPosition[1];\r\n        } else {\r\n          this.eyesLevel = -playerEyesVerticalPosition[0];\r\n        }\r\n        this.doesEyesLevelChangingUp = !this.doesEyesLevelChangingUp;\r\n      }\r\n      if (this.doesEyesLevelChangingUp) {\r\n        this.eyesLevel += (playerEyesVerticalChange[0] * fpsLimit) / fps;\r\n      } else {\r\n        this.eyesLevel += (playerEyesVerticalChange[1] * fpsLimit) / fps;\r\n      }\r\n    }\r\n\r\n    !this.isCollision(newX, newY) && ((this.x = newX), (this.y = newY));\r\n\r\n    this.rotateAngle += this.rotateState * this.rotateVelocity;\r\n    this.rotateAngle = normilizeAngle(this.rotateAngle);\r\n\r\n    this.rays.forEach((ray) => ray.setAngleAndPosition(this.rotateAngle, this.x, this.y));\r\n  }\r\n\r\n  public isCollision(x: number, y: number): boolean {\r\n    let playerX = (x / this.currentLevel.tileSize) ^ 0;\r\n    let playerY = (y / this.currentLevel.tileSize) ^ 0;\r\n    return this.currentLevel.isCollision(playerX, playerY);\r\n  }\r\n}\r\n\r\nclass Level {\r\n  ctx: CanvasRenderingContext2D;\r\n  levelArray: any;\r\n  tilesCount: any;\r\n  canvasWidth: any;\r\n  canvasHeight: any;\r\n  tileSize: number;\r\n  startingPoint: { i: number; j: number };\r\n  finishPoint: { i: number; j: number };\r\n  mask: number[][];\r\n  spritesArray: number[][];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, levelSize: number, levelPreload: any) {\r\n    this.ctx = ctx;\r\n    this.startingPoint = {\r\n      i: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n      j: Math.round(Math.random() * (levelSize - 3)) + 1,\r\n    };\r\n\r\n    if (levelPreload) {\r\n      this.finishPoint = levelPreload.finishPoint;\r\n      [this.levelArray, this.mask] = levelPreload.levelData;\r\n      this.tilesCount = this.levelArray[0].length;\r\n    } else {\r\n      this.finishPoint = {\r\n        i: levelSize - 1,\r\n        j: levelSize - 2,\r\n      };\r\n      [this.levelArray, this.mask] = this.generateLevel(levelSize);\r\n      this.tilesCount = levelSize;\r\n    }\r\n\r\n    this.canvasWidth = canvas.width;\r\n    this.canvasHeight = canvas.height;\r\n    this.tileSize = this.tileSize = (this.canvasWidth / this.tilesCount) ^ 0;\r\n  }\r\n\r\n  public clearSpritesArray() {\r\n    mapItemsAndEnemies.forEach((element) => {\r\n      element.isVisible = false;\r\n    });\r\n    for (let i = 0; i < this.tilesCount; ++i) {\r\n      this.spritesArray[i] = Array(this.tilesCount).fill(0);\r\n    }\r\n  }\r\n\r\n  public fillSpritesArray() {\r\n    mapItemsAndEnemies.forEach((element) => {\r\n      this.spritesArray[(element.y / this.tileSize) ^ 0][(element.x / this.tileSize) ^ 0] = element;\r\n    });\r\n  }\r\n\r\n  public getLevelData(): {\r\n    levelData: [number[][], number[][]];\r\n    finishPoint: { i: number; j: number };\r\n    levelSize: number;\r\n  } {\r\n    return {\r\n      levelData: [this.levelArray, this.mask],\r\n      finishPoint: this.finishPoint,\r\n      levelSize: this.tilesCount,\r\n    };\r\n  }\r\n\r\n  public getTile(x: number, y: number): number {\r\n    const i = (y / this.tileSize) ^ 0,\r\n      j = (x / this.tileSize) ^ 0;\r\n    if (i > this.tilesCount - 1 || j > this.tilesCount - 1) return 0;\r\n    return this.levelArray[i][j];\r\n  }\r\n\r\n  public generateLevel(size: number): [number[][], number[][]] {\r\n    let lvlMap: number[][] = Array(size);\r\n    let mask: number[][];\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      lvlMap[i] = Array(size).fill(defaultTextureId);\r\n    }\r\n    mask = lvlMap.map((row) => row.slice());\r\n    let lvlStack: { i: number; j: number }[] = [];\r\n\r\n    lvlStack.push({ i: 1, j: 1 });\r\n    let i = this.startingPoint.i,\r\n      j = this.startingPoint.j;\r\n    lvlMap[i][j] = 0;\r\n    while (1) {\r\n      // console.log('Searching neighbours of: ',i,j);\r\n      if (this.isAvailableAnyNeighbour(lvlMap, i, j)) {\r\n        lvlStack.push({ i, j });\r\n        let newI = i,\r\n          newJ = j;\r\n        while (1) {\r\n          newI = i;\r\n          newJ = j;\r\n          switch (Math.round(Math.random() * 4)) {\r\n            case 0:\r\n              newI = i - 1;\r\n              break;\r\n            case 1:\r\n              newJ = j - 1;\r\n              break;\r\n            case 2:\r\n              newI = i + 1;\r\n              break;\r\n            case 3:\r\n              newJ = j + 1;\r\n              break;\r\n          }\r\n          if (\r\n            newI > 0 &&\r\n            newI < size - 1 &&\r\n            newJ > 0 &&\r\n            newJ < size - 1 &&\r\n            lvlMap[newI][newJ] &&\r\n            lvlMap[newI][newJ] != 0 &&\r\n            !this.doesAnyRadiusNeighbourIsPartOfPath({ i, j }, lvlMap, newI, newJ)\r\n          )\r\n            break;\r\n        }\r\n        i = newI;\r\n        j = newJ;\r\n        lvlMap[i][j] = 0;\r\n      } else if (!lvlStack.length) {\r\n        break;\r\n      } else {\r\n        let previous = lvlStack.pop();\r\n        if (previous) {\r\n          i = previous.i;\r\n          j = previous.j;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.clearMapBlock(lvlMap, 2, 1, 1);\r\n    this.clearMapBlock(lvlMap, 2, size - 3, size - 3);\r\n    this.clearMapBlock(lvlMap, 1, this.finishPoint.i, this.finishPoint.j);\r\n    return [lvlMap, mask];\r\n  }\r\n\r\n  public clearMapBlock(lvlArray: number[][], size: number, i: number, j: number): void {\r\n    for (let x = i, xN = size; xN > 0; --xN, ++x) {\r\n      for (let y = j, yN = size; yN > 0; --yN, ++y) {\r\n        lvlArray[x][y] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  private isAvailableAnyNeighbour(lvlMap: number[][], i: number, j: number): boolean {\r\n    let isHavingSpareNeighbour = false;\r\n    let neighbourI = i,\r\n      neighbourJ = j;\r\n    for (let index = 0; index < 4; ++index) {\r\n      switch (index) {\r\n        case 0:\r\n          neighbourI = i - 1;\r\n          break;\r\n        case 1:\r\n          neighbourJ = j - 1;\r\n          break;\r\n        case 2:\r\n          neighbourI = i + 1;\r\n          break;\r\n        case 3:\r\n          neighbourJ = j + 1;\r\n          break;\r\n      }\r\n\r\n      if (\r\n        neighbourI > 0 &&\r\n        neighbourI < lvlMap.length - 1 &&\r\n        neighbourJ > 0 &&\r\n        neighbourJ < lvlMap.length - 1 &&\r\n        lvlMap[neighbourI][neighbourJ]\r\n      ) {\r\n        isHavingSpareNeighbour = true;\r\n        if (isHavingSpareNeighbour) {\r\n          isHavingSpareNeighbour = !this.doesAnyRadiusNeighbourIsPartOfPath(\r\n            { i, j },\r\n            lvlMap,\r\n            neighbourI,\r\n            neighbourJ\r\n          );\r\n        }\r\n        if (isHavingSpareNeighbour) break;\r\n      }\r\n\r\n      neighbourI = i;\r\n      neighbourJ = j;\r\n    }\r\n\r\n    return isHavingSpareNeighbour;\r\n  }\r\n\r\n  private doesAnyRadiusNeighbourIsPartOfPath(\r\n    exception: { i: number; j: number },\r\n    lvlMap: number[][],\r\n    neighbourI: number,\r\n    neighbourJ: number\r\n  ) {\r\n    // console.log('Subneighbour: ', neighbourI,neighbourJ);\r\n\r\n    let changes = { i: exception.i - neighbourI, j: exception.j - neighbourJ };\r\n    let anyNeighbourIsPath = false;\r\n    let startI = neighbourI,\r\n      endI = neighbourI,\r\n      startJ = neighbourJ,\r\n      endJ = neighbourJ;\r\n\r\n    if (changes.i > 0) {\r\n      startI -= 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.i < 0) {\r\n      endI += 1;\r\n      startJ -= 1;\r\n      endJ += 1;\r\n    }\r\n\r\n    if (changes.j > 0) {\r\n      startJ -= 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    if (changes.j < 0) {\r\n      endJ += 1;\r\n      startI -= 1;\r\n      endI += 1;\r\n    }\r\n\r\n    // console.log(`ranges: [i : ${startI}, ${endI} j : ${startJ}, ${endJ}]`);\r\n\r\n    for (let i = startI; i <= endI; ++i) {\r\n      for (let j = startJ; j <= endJ; ++j) {\r\n        // console.log('Checking: ',i,j);\r\n        if (i > 0 && i < lvlMap.length - 1 && j > 0 && j < lvlMap.length - 1 && !lvlMap[i][j]) {\r\n          anyNeighbourIsPath = true;\r\n          // console.log(i, j, ' is 0');\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return anyNeighbourIsPath;\r\n  }\r\n\r\n  public clearMaskTile(hitX: number, hitY: number, down: boolean, left: boolean): void {\r\n    hitY += down ? 1 : -1;\r\n    hitX += left ? -1 : 1;\r\n    const jTileHit = (hitX / this.tileSize) ^ 0,\r\n      iTileHit = (hitY / this.tileSize) ^ 0;\r\n    if (iTileHit > this.tilesCount - 1 || jTileHit > this.tilesCount - 1) return;\r\n    this.mask[iTileHit][jTileHit] = 0;\r\n  }\r\n\r\n  public draw(ignoreMask: boolean = false) {\r\n    for (let i = 0; i < this.tilesCount; ++i) {\r\n      for (let j = 0; j < this.tilesCount; ++j) {\r\n        this.ctx.fillStyle =\r\n          this.levelArray[i][j] && (!this.mask[i][j] || ignoreMask) ? mainColor : secondaryColor;\r\n        this.ctx.fillRect(j * this.tileSize, i * this.tileSize, this.tileSize, this.tileSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  public tick(ignoreMask: boolean = false) {\r\n    this.draw(ignoreMask);\r\n    // this.clearSpritesArray();\r\n    // this.fillSpritesArray();\r\n  }\r\n\r\n  public drawFinishPoint() {\r\n    this.ctx.fillStyle = thirdColor;\r\n    this.ctx.fillRect(\r\n      this.finishPoint.j * this.tileSize,\r\n      this.finishPoint.i * this.tileSize,\r\n      this.tileSize,\r\n      this.tileSize\r\n    );\r\n  }\r\n\r\n  public isCollision(x: number, y: number) {\r\n    if (y >= this.levelArray.length) {\r\n      y = this.levelArray.length - 1;\r\n    }\r\n    return !!this.levelArray[y][x];\r\n  }\r\n}\r\n\r\nfunction paintFloorAndCeiling(ctx: CanvasRenderingContext2D) {\r\n  ctx.fillStyle = '#005';\r\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight / 2);\r\n\r\n  ctx.fillStyle = '#222';\r\n  ctx.fillRect(0, canvasHeight / 2, canvasWidth, canvasHeight);\r\n}\r\n\r\nlet gameInterval = {\r\n  interval: 0,\r\n};\r\nlet isGameRunning = false;\r\nlet timeInterval: any;\r\nlet audioObj: any = null;\r\nlet gameTime = 0;\r\nexport const animationData = {\r\n  fps: 0,\r\n};\r\nlet localFPS = 0;\r\n\r\nfunction animationFrameRepeat(timeSpent) {\r\n  gameInterval.interval = requestAnimationFrame(animationFrameRepeat);\r\n  localFPS = 1000 / (timeSpent - gameTime);\r\n  if (localFPS >= fpsLimit) return;\r\n  animationData.fps = localFPS;\r\n  gameTime = timeSpent;\r\n\r\n  draw(animationData.fps);\r\n}\r\n\r\nexport function startGameInterval() {\r\n  gameInterval.interval = requestAnimationFrame(animationFrameRepeat);\r\n  isGameRunning = true;\r\n}\r\n\r\nexport function clearGameInterval() {\r\n  cancelAnimationFrame(gameInterval.interval);\r\n  isGameRunning = false;\r\n}\r\n\r\nexport const levelTimer = {\r\n  time: 0,\r\n};\r\n\r\nfunction clearTimerInterval() {\r\n  clearInterval(timeInterval);\r\n  levelTimer.time = 0;\r\n}\r\n\r\nfunction startTimerInterval() {\r\n  timeInterval = setInterval(() => {\r\n    if (isGameRunning) {\r\n      levelTimer.time += 100;\r\n    }\r\n  }, 100);\r\n}\r\n\r\nexport function startLevel(loadGame: any = null, levelSize: number = null, textureId = 1) {\r\n  isLevelFinished.next(false);\r\n  // audioObj?.pause();\r\n  // audioObj = null;\r\n  // audioObj = new Audio('./assets/audio/amogus.mp4');\r\n  // audioObj.addEventListener(\"canplaythrough\", () => {\r\n  //     audioObj.play();\r\n  // });\r\n  defaultTextureId = textureId;\r\n  clearGameInterval();\r\n  clearTimerInterval();\r\n  startTimerInterval();\r\n  mapItemsAndEnemies = [];\r\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n  canvasPlayWindow = document.getElementById('canvasPlayWindow') as HTMLCanvasElement;\r\n  ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  ctxPlay = canvasPlayWindow.getContext('2d') as CanvasRenderingContext2D;\r\n  // body = document.querySelector('body') as HTMLBodyElement;\r\n  // if (body) {\r\n  //   body.style.backgroundColor = secondaryColor;\r\n  // }\r\n  canvas.width = canvasHeight;\r\n  canvas.height = canvasHeight;\r\n\r\n  canvasPlayWindow.width = canvasWidth;\r\n  canvasPlayWindow.height = canvasHeight;\r\n  // rescaleCanvas(canvasPlayWindow);\r\n  loadGame && (levelTimer.time = loadGame.levelTime);\r\n  currentLevel = new Level(ctx, levelSize || defaultLevelSize, loadGame?.levelPreload);\r\n  currentPlayer = new Player(ctx, currentLevel, loadGame?.playerPreload);\r\n  mapItemsAndEnemies.push(new Enemy(currentPlayer, currentLevel));\r\n\r\n  startGameInterval();\r\n}\r\n\r\nfunction clearCanvas() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctxPlay.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nfunction draw(fps: number) {\r\n  clearCanvas();\r\n  paintFloorAndCeiling(ctxPlay);\r\n  currentLevel.tick(ignoreMask);\r\n  currentPlayer.tick(fps);\r\n\r\n  currentLevel.drawFinishPoint();\r\n}\r\n\r\n// document.addEventListener('DOMContentLoaded', startLevel);\r\n\r\nexport function playerMoveForward() {\r\n  currentPlayer.forward();\r\n}\r\n\r\nexport function playerMoveBack() {\r\n  currentPlayer.back();\r\n}\r\n\r\nexport function playerStopMoving() {\r\n  currentPlayer.moveStateZero();\r\n}\r\n\r\nexport function playerRotateLeft() {\r\n  currentPlayer.left();\r\n}\r\n\r\nexport function playerRotateRight() {\r\n  currentPlayer.right();\r\n}\r\n\r\nexport function playerStopRotating() {\r\n  currentPlayer.rotateStateZero();\r\n}\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.left();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.right();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.forward();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.back();\r\n\r\n      break;\r\n    }\r\n    // case 82: {\r\n    //     startLevel();\r\n\r\n    //     break;\r\n    // }\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keyup', (event) => {\r\n  switch (event.keyCode) {\r\n    case 37: {\r\n      //left\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 39: {\r\n      //right\r\n      currentPlayer.rotateStateZero();\r\n\r\n      break;\r\n    }\r\n    case 38: {\r\n      //forward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n    case 40: {\r\n      //backward\r\n      currentPlayer.moveStateZero();\r\n\r\n      break;\r\n    }\r\n  }\r\n});\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { getTextures } from '../scripts/draw';\n\n@Component({\n  selector: 'app-size-choose',\n  templateUrl: './size-choose.component.html',\n  styleUrls: ['./size-choose.component.scss'],\n})\nexport class SizeChooseComponent implements OnInit {\n  @Output() openCloseMenu = new EventEmitter();\n  @Output() beginLevel = new EventEmitter();\n  public activeTextureId: number;\n  public levelSize: number;\n  constructor(private loginService: LoginService) {}\n\n  ngOnInit() {\n    console.log(getTextures());\n  }\n\n  public startLevel() {\n    this.openCloseMenu.emit(-1);\n    this.beginLevel.emit({ size: this.levelSize, textureId: this.activeTextureId });\n  }\n\n  public logOut(): void {\n    this.loginService.logOut();\n  }\n\n  public sizes = [10, 20, 30, 40, 50];\n\n  public setActiveTextureId(textureId: number) {\n    this.activeTextureId = textureId;\n  }\n\n  public getTexturePosition(textureId) {\n    return `0px ${-(textureId - 1) * 64}px`;\n  }\n}\n","<div class=\"modal-background\">\n  <mat-card class=\"modal-itself\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Choose level size</mat-label>\n      <mat-select [(ngModel)]=\"levelSize\" required>\n        <mat-option *ngFor=\"let size of sizes\" [value]=\"size\"> {{ size }}x{{ size }} </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-label class=\"title\">Choose level texture *</mat-label>\n\n    <div class=\"texture-choose\">\n      <div\n        *ngFor=\"let textureId of [1, 3, 4]\"\n        (click)=\"setActiveTextureId(textureId)\"\n        [ngStyle]=\"{\n          'background-position': getTexturePosition(textureId),\n          width: '64px',\n          height: '64px'\n        }\"\n        class=\"texture\"\n        [ngClass]=\"{ highlight: activeTextureId === textureId }\"\n      ></div>\n    </div>\n    <button\n      class=\"modal-button\"\n      mat-raised-button\n      (click)=\"startLevel()\"\n      [disabled]=\"!activeTextureId || !levelSize\"\n    >\n      Start level\n    </button>\n  </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './services/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginCheckGuard implements CanActivate {\n  constructor(private router: Router, private loginService: LoginService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isInLoginPage = state.url.includes('login') || state.url.includes('register');\n    if (this.loginService.isLoggedIn()) {\n      if (isInLoginPage) {\n        this.router.navigateByUrl('/game');\n      }\n      return true;\n    } else {\n      if (isInLoginPage) {\n        return true;\n      } else {\n        this.router.navigateByUrl('/login');\n        return false;\n      }\n    }\n  }\n}\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take } from 'rxjs/operators';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public loginForm = this.fb.group({\n    login: [null, Validators.required],\n    password: [null, [Validators.required, Validators.minLength(8)]],\n    passwordRepeat: [null, Validators.required],\n  });\n  public isOnLoginPage = new BehaviorSubject(null);\n\n  constructor(\n    private loginService: LoginService,\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isOnLoginPage.next(this.router.url.includes('login'));\n    const passwordRepeatField = this.loginForm.get('passwordRepeat');\n    this.activatedRoute.url.subscribe(() => {\n      this.isOnLoginPage.next(this.router.url.includes('login'));\n      const validators = [];\n      !this.isOnLoginPage.value && validators.push(Validators.required);\n      passwordRepeatField.setValidators(validators);\n    });\n    passwordRepeatField.valueChanges.subscribe((value) => {\n      if (value !== this.loginForm.get('password').value) {\n        passwordRepeatField.setErrors({\n          match: \"passwords doesn't match\",\n        });\n      } else {\n        passwordRepeatField.setErrors(null);\n      }\n    });\n  }\n\n  public logInAsGuest(): void {\n    this.loginService.logInAsGuest();\n  }\n\n  public logInAsUser(): void {\n    this.loginService\n      .logIn(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n\n  public register(): void {\n    this.loginService\n      .register(this.loginForm.value)\n      .pipe(\n        take(1),\n        catchError((error) => {\n          return throwError(error);\n        })\n      )\n      .subscribe((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          this.loginService.setUserIdToLocalStorage(response.userId);\n          this.router.navigateByUrl('/game');\n        }\n      });\n  }\n}\n","<div class=\"modal-background\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"logInAsGuest()\" class=\"as-guest\">\r\n    Play as guest\r\n  </button>\r\n  <mat-card class=\"modal-itself\">\r\n    <form [formGroup]=\"loginForm\" class=\"form\">\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Login</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"login\" placeholder=\"Login\" required />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('password').errors\"\r\n          >Min length of password is 8 symbols</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"form-field\" appearance=\"outline\" *ngIf=\"!(isOnLoginPage | async)\">\r\n        <mat-label>Repeat password</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          formControlName=\"passwordRepeat\"\r\n          placeholder=\"Repeat password\"\r\n          [required]=\"!(isOnLoginPage | async)\"\r\n        />\r\n        <mat-error *ngIf=\"loginForm.get('passwordRepeat').errors\">{{\r\n          loginForm.get('passwordRepeat').errors['match']\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n    <div class=\"login-buttons\">\r\n      <a routerLink=\"/register\" *ngIf=\"isOnLoginPage | async; else alreadyRegistered\"\r\n        >don't have account yet?</a\r\n      >\r\n      <ng-template #alreadyRegistered>\r\n        <a routerLink=\"/login\">already registered?</a>\r\n      </ng-template>\r\n\r\n      <button\r\n        class=\"modal-button sign-in-btn\"\r\n        mat-raised-button\r\n        (click)=\"logInAsUser()\"\r\n        [disabled]=\"!loginForm.valid\"\r\n        *ngIf=\"isOnLoginPage | async; else regButton\"\r\n      >\r\n        Sign in\r\n      </button>\r\n      <ng-template #regButton>\r\n        <button\r\n          class=\"modal-button sign-in-btn\"\r\n          mat-raised-button\r\n          (click)=\"register()\"\r\n          [disabled]=\"!loginForm.valid\"\r\n        >\r\n          Register\r\n        </button>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\n@NgModule({\n  declarations: [],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n})\nexport class MaterialModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameSaveLoadService {\n  constructor(private router: Router, private http: HttpClient) {}\n\n  public saveGameData(payload: any, userId: string): Observable<any> {\n    return this.http.post<any>(`${URL}/save-game/${userId}`, payload);\n  }\n\n  public getGameData(saveId: string, userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/load-game/${saveId}/${userId}`);\n  }\n\n  public getGameSaves(userId: string): Observable<any> {\n    return this.http.get<any>(`${URL}/game-saves/${userId}`);\n  }\n\n  public saveLevelFinishStats(\n    { time, size }: { time: number; size: number },\n    userId: string\n  ): Observable<any> {\n    return this.http.post<any>(`${URL}/level-stats/`, { time, size, userId });\n  }\n\n  public getLevelTableStats(size: number): Observable<any> {\n    return this.http.get<any>(`${URL}/level-stats/${size}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from, Observable } from 'rxjs';\nimport { URL } from '../../configuration/apiUrl';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private router: Router, private http: HttpClient) {}\n  public isLoggedIn(): boolean {\n    return !!localStorage.getItem('userId');\n  }\n\n  public logInAsGuest(): void {\n    this.setUserIdToLocalStorage('guest');\n    this.router.navigateByUrl('/game');\n  }\n\n  public setUserIdToLocalStorage(userId: string): void {\n    localStorage.setItem('userId', userId);\n  }\n\n  public logIn({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/login`, { login, password });\n  }\n\n  public register({ login, password }: { login: string; password: string }): Observable<any> {\n    return this.http.post<any>(`${URL}/register`, { login, password });\n  }\n\n  public isAuthorized(): Observable<any> {\n    return this.http.get<any>(`${URL}/user-exists/${localStorage.getItem('userId')}`);\n  }\n\n  public logOut(): void {\n    localStorage.removeItem('userId');\n    this.router.navigateByUrl('/login');\n  }\n\n  public get currentUserId(): string {\n    return localStorage.getItem('userId');\n  }\n}\n","export const URL = 'https://raycast.herokuapp.com/api';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}